<policies>
	<inbound>
		<base />
		<set-variable name="IsMockEnabled" value="@(context.Request.Headers.GetValueOrDefault("IsMockEnabled","").Contains("true"))" />
		<choose>
			<when condition="@(context.Variables.GetValueOrDefault<bool>("IsMockEnabled"))">
				<set-variable name="isSuccess" value="@(context.Request.Headers.GetValueOrDefault("ResponseStatusCode","").Contains("200"))" />
				<set-variable name="isInternalServerError" value="@(context.Request.Headers.GetValueOrDefault("ResponseStatusCode","").Contains("500"))" />
				<choose>
					<when condition="@(context.Variables.GetValueOrDefault<bool>("isSuccess"))">
						<return-response>
							<set-status code="200" reason="Success" />
							<set-body>{
						 "success": true,
						 "data": {
						 "account": {
						 "accountHolders": [
						 {
						 "user": {
						 "firstName‚Äù: {@(context.Request.Headers.GetValueOrDefault("ResponseStatusCode"))}
						 "lastName": "Doe",
						 "dobStatus": "matched",
						 "last4Identity": "5819",
						 "identityType": "ssn",
						 "userIdentifier": "acc33b18-28dd-4345-a402-7f2f35d123fa",
						 "peerTransferAcceptPreference": "manual",
						 "status": "active",
						 "isPrimaryAccountHolder": true,
						 "kycStateData": {
						 "ofacStatus": "passed",
						 "kycStatus": "passed",
						 "kycPendingGate": "healthy"
						 }
						 },
						 "responseDetails": [
						 {
						 "code": 0,
						 "subCode": 0,
						 "description": "Success",
						 "url": "http://tbd"
						 }
						 ]
						}
						}
						 }
							}</set-body>
						</return-response>
					</when>
					<when condition="@(context.Variables.GetValueOrDefault<bool>("isInternalServerError"))">
						<return-response>
							<set-status code="500" reason="Internal Server Error" />
							<set-body>
{
   "success":true,
   "data":"isInternalServerError"
} </set-body>
						</return-response>
					</when>
					<otherwise>
						<return-response>
							<set-status code="404" reason="Not Available" />
							<set-body>{
						 "success": true,
						 "data":"Is Not Available"</set-body>
						</return-response>
					</otherwise>
				</choose>
			</when>
		</choose>
	</inbound>
	<outbound>
		<base />
	</outbound>
	<backend>
		<base />
	</backend>
	<on-error>
		<base />
	</on-error>
</policies>