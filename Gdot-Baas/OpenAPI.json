{
  "openapi": "3.0.1",
  "info": {
    "title": "Gd.Bos.V1",
    "version": "v1"
  },
  "paths": {
    "/programs/{programCode}/accounts/{accountIdentifier}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get a account",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extend",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update account",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTermsAcceptancesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTermsAcceptancesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTermsAcceptancesRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTermsAcceptancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTermsAcceptancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/statements/{statementPeriod}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get a EStatement",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierStatementsByStatementPeriodGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statementPeriod",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCbl",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEStatementResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEStatementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/statements": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get List EStatements",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierStatementsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCbl",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListEStatementResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListEStatementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/search": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "SearchAccount",
        "operationId": "ProgramsByProgramCodeAccountsSearchPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedData"
              }
            }
          },
          "x-bodyName": "data"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/close": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update account status to Restricted",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierClosePut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseAccountRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/status": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update account status to specified status with notes",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierStatusPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPartnerAccountStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPartnerAccountStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPartnerAccountStatusRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPartnerAccountStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPartnerAccountStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Users",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update user",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/identity": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update user",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierIdentityPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItinResquest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItinResquest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItinResquest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItinResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/kycGates/kyc2": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "ExecuteKyc",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierKycGatesKyc2Post",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-EnrollmentRequestIdentifier",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FraudKycCureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FraudKycCureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FraudKycCureRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudKycCureResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudKycCureResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/ACHTransfers": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Returns a list of transfers for an account in a specific time period",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierACHTransfersGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetACHTransfersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetACHTransfersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/{transferIdentifier}/mrdc": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Mrdc Transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersByTransferIdentifierMrdcGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMrdcTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMrdcTransferResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Updates check status by accepting or rejecting the transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersByTransferIdentifierMrdcPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/fundfulfillment/{transferIdentifier}/mrdc": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Fund Fulfillment Mrdc Transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierFundfulfillmentByTransferIdentifierMrdcGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundFulfillmentMrdcTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundFulfillmentMrdcTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/mrdc": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Mrdc Transfer List",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersMrdcGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMrdcTransferListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMrdcTransferListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/fundfulfillment/mrdc": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Fund Fulfillment Mrdc Transfer List",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierFundfulfillmentMrdcGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundFulfillmentMrdcTransferListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFundFulfillmentMrdcTransferListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/{transferIdentifier}/mrdc/checkImage": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get check images by transfer identifier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersByTransferIdentifierMrdcCheckImageGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "colorImage",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCheckImagesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCheckImagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/onHold": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Mrdc Transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersOnHoldGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOnHoldTransfersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOnHoldTransfersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/{transferIdentifier}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get P2P transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersByTransferIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetP2PTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetP2PTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transfers/p2p": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get All P2P transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransfersP2pGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isInitiator",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllP2PTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllP2PTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/externalcards": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get All External Cards",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExternalcardsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllExternalCardsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllExternalCardsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/externalcards/{cardIdentifier}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete an external card",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExternalcardsByCardIdentifierDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteExternalCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteExternalCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/AccountHolders": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add an account holder to an exiting account",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAccountHoldersPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountHolderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountHolderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountHolderRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAccountHolderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAccountHolderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/getLinkedAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Add an account holder to an exiting account",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierGetLinkedAccountGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLinkedAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLinkedAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/authCustomerSSOToken": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get SSO Token",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierAuthCustomerSSOTokenGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthCustomerSSOTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthCustomerSSOTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/getAuthCustomerEnrollment": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Auth CustomerEnrollment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierGetAuthCustomerEnrollmentGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/odEligibilities": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Perform OD eligibility check based on inquiry date instead of BCD to return the OD eligibility result OD engine will replies numeric response",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierOdEligibilitiesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OdEligibilityCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OdEligibilityCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/taxdocuments/{year}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get a taxdocument",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTaxdocumentsByYearGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/taxdocuments": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get List TaxDocuments",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTaxdocumentsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/adjustments": {
      "post": {
        "tags": [
          "Adjustment"
        ],
        "summary": "Adjust balance",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAdjustmentsPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustBalanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustBalanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustBalanceRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustBalanceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustBalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/adjustments/{adjustmentIdentifier}": {
      "get": {
        "tags": [
          "Adjustment"
        ],
        "summary": "GetAdjustBalanceStatusAsync",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAdjustmentsByAdjustmentIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adjustmentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdjustAccountBalanceStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdjustAccountBalanceStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/ammRule": {
      "post": {
        "tags": [
          "AMMRule"
        ],
        "summary": "Create a new AMM rule",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAmmRulePost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAMMRuleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAMMRuleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAMMRuleRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAMMRuleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAMMRuleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AMMRule"
        ],
        "summary": "Delete an AMM rule",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAmmRuleDelete",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAMMRuleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAMMRuleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/ammRule/{ruleId}": {
      "put": {
        "tags": [
          "AMMRule"
        ],
        "summary": "update an AMM rule status",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAmmRuleStatusByRuleIdPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAMMRuleStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAMMRuleStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAMMRuleStatusRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAMMRuleStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAMMRuleStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/authentication": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create new user",
        "operationId": "AuthenticationPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/billpayPayees": {
      "get": {
        "tags": [
          "BillPay"
        ],
        "summary": "Get payee list.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayeeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayeeListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BillPay"
        ],
        "summary": "Create new payee.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayeeRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePayeeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePayeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/billpayPayees/{payeeIdentifier}": {
      "get": {
        "tags": [
          "BillPay"
        ],
        "summary": "Get payee by Payee Identifier.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesByPayeeIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payeeIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayeeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayeeResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillPay"
        ],
        "summary": "Update payee.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesByPayeeIdentifierPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payeeIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayeeRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayeeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayeeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BillPay"
        ],
        "summary": "Remove payee.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesByPayeeIdentifierDelete",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payeeIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePayeeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePayeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/billpayPayees/search": {
      "post": {
        "tags": [
          "BillPay"
        ],
        "summary": "Search payee.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPayeesSearchPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchPayeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchPayeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchPayeeRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchPayeeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchPayeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/billpayPayments": {
      "get": {
        "tags": [
          "BillPay"
        ],
        "summary": "Get payment list.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPaymentsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingPaymentDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endingPaymentDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPaymentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BillPay"
        ],
        "summary": "Create new payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPaymentsPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/billpayPayments/{paymentIdentifier}": {
      "get": {
        "tags": [
          "BillPay"
        ],
        "summary": "Get payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPaymentsByPaymentIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillPay"
        ],
        "summary": "Update payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPaymentsByPaymentIdentifierPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BillPay"
        ],
        "summary": "Delete payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBillpayPaymentsByPaymentIdentifierDelete",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/businessProfile": {
      "get": {
        "tags": [
          "BusinessProfile"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBusinessProfileGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBusinessProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBusinessProfileResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BusinessProfile"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBusinessProfilePut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessProfileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessProfileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessProfileRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBusinessProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBusinessProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/cardOptions": {
      "get": {
        "tags": [
          "CardOption"
        ],
        "summary": "Get card options",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCardOptionsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReplacementCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReplacementCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/customerCare/cases": {
      "post": {
        "tags": [
          "CareCase"
        ],
        "summary": "",
        "operationId": "ProgramsByProgramCodeCustomerCareCasesPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CareCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CareCaseRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareCaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/cashbackReward/businessProcessRules": {
      "get": {
        "tags": [
          "CashbackReward"
        ],
        "summary": "",
        "operationId": "ProgramsByProgramCodeCashbackRewardBusinessProcessRulesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "features",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashbackRewardBusinessProcessRulesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashbackRewardBusinessProcessRulesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/cashbackReward/summary": {
      "get": {
        "tags": [
          "CashbackReward"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCashbackRewardSummaryGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashbackRewardSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashbackRewardSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/userCategory": {
      "get": {
        "tags": [
          "CategorizeTransaction"
        ],
        "summary": "Get User Categoried Transaction",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUserCategoryGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriedTransactionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriedTransactionResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CategorizeTransaction"
        ],
        "summary": "Set Category for a Transaction",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUserCategoryPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserCategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserCategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserCategoryRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserCategoryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/userCategory/summary": {
      "get": {
        "tags": [
          "CategorizeTransaction"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUserCategorySummaryGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCategorySummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCategorySummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/CNAPI/Notification/Transfer": {
      "post": {
        "tags": [
          "CNAPI"
        ],
        "operationId": "ProgramsByProgramCodeCNAPINotificationTransferPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CNAPITransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CNAPITransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CNAPITransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CNAPITransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CNAPITransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/contactVerifications": {
      "post": {
        "tags": [
          "ContactVerification"
        ],
        "summary": "GenerateVerifications",
        "operationId": "ProgramsByProgramCodeContactVerificationsPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVerificationsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVerificationsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVerificationsRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateVerificationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateVerificationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/contactVerifications/{contactVerificationIdentifier}": {
      "put": {
        "tags": [
          "ContactVerification"
        ],
        "summary": "CheckVerifications",
        "operationId": "ProgramsByProgramCodeContactVerificationsByContactVerificationIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactVerificationIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckVerificationsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckVerificationsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckVerificationsRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckVerificationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckVerificationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/AddressVerification": {
      "post": {
        "tags": [
          "ContactVerification"
        ],
        "summary": "AddressVerifications",
        "operationId": "ProgramsByProgramCodeAddressVerificationPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressVerificationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressVerificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/verification/status/{sessionIdentifier}": {
      "get": {
        "tags": [
          "ContactVerification"
        ],
        "summary": "GetContactVerificationStatus",
        "operationId": "ProgramsByProgramCodeVerificationStatusBySessionIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactVerificationStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactVerificationStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/eligibilityCheck": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanEligibilityCheckGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblEligibilityCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblEligibilityCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/atpCheck": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "ATPCheck",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanAtpCheckGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Income",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "IncomeFrequency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expense",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ExpenseFrequency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestId",
            "in": "query",
            "description": "Required : Contains request id received from request headers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestOptions",
            "in": "query",
            "description": "Optional : Contains request options to use during request execution",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.ProgramCode",
            "in": "query",
            "description": "ProgramCode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.Source",
            "in": "query",
            "description": "Optional : Container for source of the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.IgnoreMfa",
            "in": "query",
            "description": "https://pd.nextestate.com/browse/GBOS-49700",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallIntent",
            "in": "query",
            "description": "Internal : Contains call intent determined after request was processed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblAtpCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblAtpCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/velocityCheck": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Velocity Check",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanVelocityCheckGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestId",
            "in": "query",
            "description": "Required : Contains request id received from request headers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestOptions",
            "in": "query",
            "description": "Optional : Contains request options to use during request execution",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.ProgramCode",
            "in": "query",
            "description": "ProgramCode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.Source",
            "in": "query",
            "description": "Optional : Container for source of the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.IgnoreMfa",
            "in": "query",
            "description": "https://pd.nextestate.com/browse/GBOS-49700",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallIntent",
            "in": "query",
            "description": "Internal : Contains call intent determined after request was processed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblVelocityCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblVelocityCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/loanPreview": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Get Loan Preview",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanLoanPreviewGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoanPlanKey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AccountIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestId",
            "in": "query",
            "description": "Required : Contains request id received from request headers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.RequestOptions",
            "in": "query",
            "description": "Optional : Contains request options to use during request execution",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.ProgramCode",
            "in": "query",
            "description": "ProgramCode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.Source",
            "in": "query",
            "description": "Optional : Container for source of the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Header.IgnoreMfa",
            "in": "query",
            "description": "https://pd.nextestate.com/browse/GBOS-49700",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CallIntent",
            "in": "query",
            "description": "Internal : Contains call intent determined after request was processed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanPreviewResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanPreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/autoPayment": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "get Credit Builder Loan auto payment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanAutoPaymentGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetAutoPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetAutoPaymentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Setup auto payment rule",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanAutoPaymentPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CblCreateAutoPaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CblCreateAutoPaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CblCreateAutoPaymentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCreateAutoPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCreateAutoPaymentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Cancel auto payment rule",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanAutoPaymentDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCancelAutoPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCancelAutoPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Get Credit Builder Loan",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "enum": [
                "summary",
                "detail",
                "transaction",
                "amortizationTable",
                "all"
              ],
              "type": "string"
            }
          },
          {
            "name": "accountLoanPlanIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Open Credit Builder Loan",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CblOpenLoanRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CblOpenLoanRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CblOpenLoanRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblOpenLoanResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblOpenLoanResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Close Credit Builder Loan",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCloseLoanResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCloseLoanResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/loanTemplate": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Get Credit Builder Loan Template",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanLoanTemplateGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanTemplateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoanTemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/payment": {
      "post": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Create Credit Builder Loan payment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanPaymentPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CblPaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CblPaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CblPaymentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/Loans": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Get Credit Builder Loan List",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanLoansGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoansResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetLoansResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/scheduledPayments/{scheduledPaymentIdentifier}": {
      "delete": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "Cancel Credit Builder Loan scheduled payment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanScheduledPaymentsByScheduledPaymentIdentifierDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduledPaymentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCancelScheduledPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblCancelScheduledPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditBuilderLoan/scheduledPayment": {
      "get": {
        "tags": [
          "CreditBuilderLoan"
        ],
        "summary": "get Credit Builder Loan scheduled payment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditBuilderLoanScheduledPaymentGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetScheduledPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CblGetScheduledPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/userIdentifiers/{userIdentifier}/getCustomCard": {
      "get": {
        "tags": [
          "CustomCard"
        ],
        "summary": "Get custom card",
        "operationId": "ProgramsByProgramCodeUserIdentifiersByUserIdentifierGetCustomCardGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customCardImageIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/userIdentifiers/{userIdentifier}/customCard": {
      "post": {
        "tags": [
          "CustomCard"
        ],
        "summary": "create custom card",
        "operationId": "ProgramsByProgramCodeUserIdentifiersByUserIdentifierCustomCardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomCardRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/userIdentifiers/{userIdentifier}/cancelCustomCard": {
      "post": {
        "tags": [
          "CustomCard"
        ],
        "summary": "CancelCustomCard",
        "operationId": "ProgramsByProgramCodeUserIdentifiersByUserIdentifierCancelCustomCardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelCustomCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelCustomCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/deviceVerification": {
      "post": {
        "tags": [
          "DeviceVerification"
        ],
        "summary": "VerifyDevice",
        "operationId": "ProgramsByProgramCodeDeviceVerificationPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceVerificationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceVerificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/updateDeviceVerification": {
      "put": {
        "tags": [
          "DeviceVerification"
        ],
        "summary": "UpdateDevice",
        "operationId": "ProgramsByProgramCodeUpdateDeviceVerificationPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVerificationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVerificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disbursements/bankcard": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Creates BankCard Link",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsBankcardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementBankCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementBankCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementBankCardRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBankCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBankCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disbursements/cash": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Creates Cash Link",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsCashPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementCashRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementCashRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementCashRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisbursementCashResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisbursementCashResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disbursements/ach": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsAchPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementAchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementAchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisbursementAchRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisbursementAchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisbursementAchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disbursements/transfer/{transferIdentifier}": {
      "get": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Get Transfer Status",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsTransferByTransferIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferStatusResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Update Transfer to cancel claim code",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsTransferByTransferIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisbursementUpdateTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisbursementUpdateTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisbursementUpdateTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisbursementUpdateTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisbursementUpdateTransferResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Generic Transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisbursementsTransferByTransferIdentifierPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disputes/urls": {
      "post": {
        "tags": [
          "DisputeAutomation"
        ],
        "summary": "Get Tokenized Url",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisputesUrlsPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenizedUrlRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenizedUrlRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenizedUrlRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenizedUrlResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenizedUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/disputes/tokens": {
      "post": {
        "tags": [
          "DisputeAutomation"
        ],
        "summary": "Create OAuth Token",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDisputesTokensPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisputeTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisputeTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/ecashpartners": {
      "get": {
        "tags": [
          "ECash"
        ],
        "summary": "Get ECash Partners",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierEcashpartnersGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetECashPartnersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetECashPartnersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/barcodes/list": {
      "get": {
        "tags": [
          "ECash"
        ],
        "summary": "Gets the active barcodes associated with account identifier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBarcodesListGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBarcodesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBarcodesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/barcodes/{barcodeHumanReadable}": {
      "get": {
        "tags": [
          "ECash"
        ],
        "summary": "Gets the details of the barcode",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBarcodesByBarcodeHumanReadableGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "barcodeHumanReadable",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBarcodesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBarcodesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/barcodes": {
      "post": {
        "tags": [
          "ECash"
        ],
        "summary": "Generates a new barcode for a given retailer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierBarcodesPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBarcodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBarcodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBarcodeRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateBarcodeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateBarcodeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/egifts/catalog": {
      "get": {
        "tags": [
          "EGift"
        ],
        "summary": "GetEGiftCatalog: Method to get catalog for egift.",
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsCatalogGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftCatalogResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftCatalogResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/egifts": {
      "get": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftWalletResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftWalletResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftPurchaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftPurchaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftPurchaseRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftPurchaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftPurchaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/egifts/{egiftId}": {
      "get": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsByEgiftIdGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "egiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsByEgiftIdDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "egiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftDeleteResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftDeleteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/egifts/{egiftId}/balance": {
      "get": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsByEgiftIdBalanceGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "egiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftBalanceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftBalanceResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsByEgiftIdBalancePut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "egiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftUpdateBalanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftUpdateBalanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EGiftUpdateBalanceRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftUpdateBalanceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftUpdateBalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/egifts/lifetimerewards": {
      "get": {
        "tags": [
          "EGift"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierEgiftsLifetimerewardsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftGetLifeTimeRewardsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGiftGetLifeTimeRewardsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/samples": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Enrolls for DM/WB's activation",
        "operationId": "ProgramsByProgramCodeEnrollmentsSamplesPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-Source",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-EnrollmentRequestIdentifier",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SamplesEnrollmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SamplesEnrollmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SamplesEnrollmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamplesEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamplesEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments": {
      "post": {
        "tags": [
          "enrollments"
        ],
        "summary": "Enrolls a User into a Product and creates the Account and Card",
        "description": "testing the swagger md file for ProgramsByProgramCodeAccountsByAccountIdentifierGet Id",
        "operationId": "ProgramsByProgramCodeEnrollmentsPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-Source",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Gd-Bos-IgnoreMFA",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-EnrollmentRequestIdentifier",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/scc": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Enrolls a SCC User into a Product and creates the Account and Card",
        "operationId": "ProgramsByProgramCodeEnrollmentsSccPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SccEnrollRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SccEnrollRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SccEnrollRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SccEnrollResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SccEnrollResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/retailcard": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Enrolls a Retail Customer into a Product and creates the Account and activates the Card",
        "operationId": "ProgramsByProgramCodeEnrollmentsRetailcardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCardEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCardEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/retailcard/recover": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "operationId": "ProgramsByProgramCodeEnrollmentsRetailcardRecoverPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRecoverRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRecoverRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCardEnrollmentRecoverRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCardEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCardEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/account/{accountIdentifier}": {
      "put": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Update enroll account's consumer profile",
        "operationId": "ProgramsByProgramCodeEnrollmentsAccountByAccountIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutEnrollmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutEnrollmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutEnrollmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/enrollments/accounts/{accountIdentifier}": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Get enrollment details",
        "operationId": "ProgramsByProgramCodeEnrollmentsAccountsByAccountIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/testeventwebhooksetconfig": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Configuration controller for Test Event Web hook loopback response time",
        "operationId": "ProgramsByProgramCodeTesteventwebhooksetconfigPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEventWebHookSetConfigRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEventWebHookSetConfigRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestEventWebHookSetConfigRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/testeventwebhook-rcv": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "POC for Event Web hook loopback",
        "operationId": "ProgramsByProgramCodeTesteventwebhook-rcvPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-gd-signature",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWebHookPocResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWebHookPocResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/testeventwebhook": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "POC for Event Web hook loopback",
        "operationId": "ProgramsByProgramCodeTesteventwebhookPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWebHookPocResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWebHookPocResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/experian/optin": {
      "get": {
        "tags": [
          "Experian"
        ],
        "summary": "Get OptIn",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExperianOptinGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperianOptInResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperianOptInResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Experian"
        ],
        "summary": "Update OptIn",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExperianOptinPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianUpdateOptInRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianUpdateOptInRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianUpdateOptInRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperianUpdateOptInResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperianUpdateOptInResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/experian/authorizeExtend": {
      "post": {
        "tags": [
          "Experian"
        ],
        "summary": "Create AuthorizeExtend",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExperianAuthorizeExtendPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianCreateAuthorizeExtendRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianCreateAuthorizeExtendRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExperianCreateAuthorizeExtendRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperianCreateAuthorizeExtendResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperianCreateAuthorizeExtendResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/experian/{featureName}/{newAccountAdded}/redirectUrl": {
      "get": {
        "tags": [
          "Experian"
        ],
        "summary": "Get RedirectUrl",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExperianByFeatureNameByNewAccountAddedRedirectUrlGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featureName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newAccountAdded",
            "in": "path",
            "description": "true/false",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperianRedirectUrlResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperianRedirectUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/externalcards": {
      "post": {
        "tags": [
          "ExternalCards"
        ],
        "summary": "Add or validate external bank card",
        "operationId": "ProgramsByProgramCodeExternalcardsPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExternalCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExternalCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddExternalCardRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddExternalCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddExternalCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/GetFeeWaivers": {
      "post": {
        "tags": [
          "Fee"
        ],
        "summary": "Get Fee waived for a user between a range",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierGetFeeWaiversPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFeeWaiversRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFeeWaiversRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFeeWaiversRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeeWaiversResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeeWaiversResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/GuestVerification": {
      "post": {
        "tags": [
          "GuestVerification"
        ],
        "summary": "Create new payee.",
        "operationId": "ProgramsByProgramCodeGuestVerificationPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGuestVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGuestVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGuestVerificationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGuestVerificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGuestVerificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/healthCheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Reports service health status based on availability of downstream dependencies",
        "operationId": "HealthCheckGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "For Partner to test whether our servers are reachable.",
        "operationId": "PingGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/purses/{purseIdentifier}/interestRateTier": {
      "get": {
        "tags": [
          "InterestRate"
        ],
        "summary": "Get Purse Interest Rate Tiers",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierInterestRateTierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurseInterestRateTiersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurseInterestRateTiersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InterestRate"
        ],
        "summary": "Add Interest Rate Tier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierInterestRateTierPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInterestRateTierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInterestRateTierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddInterestRateTierRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddInterestRateTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddInterestRateTierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/purses/{purseIdentifier}/interestRateTier/{interestRateTierIdentifier}": {
      "put": {
        "tags": [
          "InterestRate"
        ],
        "summary": "Update Interest Rate Tier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierInterestRateTierByInterestRateTierIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interestRateTierIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInterestRateTierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInterestRateTierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInterestRateTierRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInterestRateTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInterestRateTierResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InterestRate"
        ],
        "summary": "Delete Interest Rate Tier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierInterestRateTierByInterestRateTierIdentifierDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interestRateTierIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInterestRateTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInterestRateTierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/kycGates/kyc1": {
      "post": {
        "tags": [
          "Kyc"
        ],
        "summary": "Create KYC1 request",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierKycGatesKyc1Post",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc1Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc1Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc1Request"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc1Response"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/kycGates/idv": {
      "post": {
        "tags": [
          "Kyc"
        ],
        "summary": "Create IDV request",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierKycGatesIdvPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIDVRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIDVRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIDVRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIDVResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIDVResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/kycGates/{kycGateValue}": {
      "get": {
        "tags": [
          "Kyc"
        ],
        "summary": "Get KYC gate status",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierKycGatesByKycGateValueGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kycGateValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKycResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKycResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/kycGates/kyc2": {
      "post": {
        "tags": [
          "Kyc"
        ],
        "summary": "Create KYC2 request",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierKycGatesKyc2Post",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc2Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc2Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKyc2Request"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc2Response"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/kycGates/oow": {
      "post": {
        "tags": [
          "Kyc"
        ],
        "summary": "Submit OOW answers",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierKycGatesOowPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOOWRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOOWRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOOWRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKyc1Response"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/kycGates/scanCapture": {
      "post": {
        "tags": [
          "Kyc"
        ],
        "summary": "Create ScanCapture request",
        "operationId": "ProgramsByProgramCodeKycGatesScanCapturePost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanCaptureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanCaptureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanCaptureRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScanCaptureResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScanCaptureResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/locations/ATM": {
      "get": {
        "tags": [
          "Locator"
        ],
        "summary": "Get ATM Location List",
        "operationId": "ProgramsByProgramCodeLocationsATMGet",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAtmLocationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAtmLocationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/locations/retail": {
      "get": {
        "tags": [
          "Locator"
        ],
        "summary": "Get Retail Location List",
        "operationId": "ProgramsByProgramCodeLocationsRetailGet",
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "featureSet",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRetailLocationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRetailLocationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/notification/enrollment": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get Notification Enrollment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierNotificationEnrollmentGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationEnrollmentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Create Notification Enrollment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierNotificationEnrollmentPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationEnrollmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationEnrollmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationEnrollmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNotificationEnrollmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNotificationEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/inbox/messages": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get Inbox Message",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierInboxMessagesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryKey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyWords",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sccAccountIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboxMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboxMessageResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Get Notification Enrollment",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierInboxMessagesPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMessageAsReadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMessageAsReadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkMessageAsReadRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkMessageAsReadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkMessageAsReadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/inbox/messages/count": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "GetInboxMessageCount",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierInboxMessagesCountGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sccAccountIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboxMessageCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboxMessageCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/checkInventory": {
      "put": {
        "tags": [
          "PaperCheck"
        ],
        "summary": "stop paper check payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCheckInventoryPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopPaperCheckPaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StopPaperCheckPaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StopPaperCheckPaymentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPaperCheckPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPaperCheckPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/checkBookOrder": {
      "put": {
        "tags": [
          "PaperCheck"
        ],
        "summary": "stop paper check payment.",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCheckBookOrderPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckBookOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckBookOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckBookOrderRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckBookOrderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckBookOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/checkBookOrders": {
      "get": {
        "tags": [
          "PaperCheck"
        ],
        "summary": "Get CheckBookOrders",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCheckBookOrdersGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderConfirmationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCheckBookOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCheckBookOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get payment details for given account",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentsGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSccPaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSccPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}": {
      "get": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Get payment instrument",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BaaS-Version",
            "in": "header",
            "description": "1.0/2.0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extend",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usage",
            "in": "query",
            "description": "cardholder/partner",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pciData",
            "in": "query",
            "description": "Comma separated values any or all from pan,cvv,exp. pan: Pan, cvv: Cvv, exp: Expiration Month/Year",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "Ipv4/Ipv6",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Set atm pin on payment instrument",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPinRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPinRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPinRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPinResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments": {
      "get": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Get user payment instrument list",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Complete registration for those stuck in an incomplete status",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRegistrationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteRegistrationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteRegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/validateCard": {
      "post": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Validate a card cvv",
        "operationId": "ProgramsByProgramCodeValidateCardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCardRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/activateCard": {
      "post": {
        "tags": [
          "PaymentInstrument"
        ],
        "summary": "Activate card",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierActivateCardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/ActivateCard": {
      "post": {
        "tags": [
          "PaymentInstrument"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierActivateCardPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardWithIdentifierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardWithIdentifierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCardWithIdentifierRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/lifecycleEvent": {
      "put": {
        "tags": [
          "PaymentInstrument"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierLifecycleEventPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentInstrumentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentInstrumentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentInstrumentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentInstrumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentInstrumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/deliveryStatus": {
      "get": {
        "tags": [
          "PaymentInstrument"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierDeliveryStatusGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackMyMailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackMyMailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/replaceCardEligibility": {
      "get": {
        "tags": [
          "PaymentInstrument"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierReplaceCardEligibilityGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceCardEligibilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceCardEligibilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/pushProvisionConfig": {
      "get": {
        "tags": [
          "PaymentInstrumentToken"
        ],
        "summary": "Get list of push provision config options",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPushProvisionConfigGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPushProvisionConfigListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPushProvisionConfigListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/tokens": {
      "get": {
        "tags": [
          "PaymentInstrumentToken"
        ],
        "summary": "Get list of payment instrument tokens",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTokensGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentTokenListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentInstrumentTokenListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/createPushProvisionData": {
      "post": {
        "tags": [
          "PaymentInstrumentToken"
        ],
        "summary": "Creates push provisioning data for app-initiated digital wallet operations",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierCreatePushProvisionDataPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePushProvisionDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePushProvisionDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/paymentInstruments/{paymentInstrumentIdentifier}/pushProvisionData": {
      "post": {
        "tags": [
          "PaymentInstrumentToken"
        ],
        "summary": "Creates push provisioning data for app-initiated digital wallet operations",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPaymentInstrumentsByPaymentInstrumentIdentifierPushProvisionDataPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushProvisionDataRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePushProvisionDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePushProvisionDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/accountEvents": {
      "post": {
        "tags": [
          "PointsService"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierAccountEventsPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountPointEventRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountPointEventRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountPointEventRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountPointEventResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountPointEventResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/points": {
      "get": {
        "tags": [
          "PointsService"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPointsGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showMilestone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountPointsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountPointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/challenges": {
      "get": {
        "tags": [
          "PointsService"
        ],
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierChallengesGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountChallengesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountChallengesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/products/{productCode}/features/{feature}/limits": {
      "get": {
        "tags": [
          "ProductFeatureLimits"
        ],
        "summary": "Get Product Feature Limits",
        "operationId": "ProgramsByProgramCodeProductsByProductCodeFeaturesByFeatureLimitsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "feature",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productClass",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productTierClass",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductFeatureLimitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductFeatureLimitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/products/{productCode}/InterestRateTier": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Product Interest Rate Tier",
        "operationId": "ProgramsByProgramCodeProductsByProductCodeInterestRateTierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "effectiveDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductInterestRateTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductInterestRateTierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/purses": {
      "get": {
        "tags": [
          "Purse"
        ],
        "summary": "Get purses",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPursesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPursesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purse"
        ],
        "summary": "Create new purse",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesPost",
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurseRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePurseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePurseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/purses/{purseIdentifier}": {
      "put": {
        "tags": [
          "Purse"
        ],
        "summary": "Update purse",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurseRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePurseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePurseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Purse"
        ],
        "summary": "Close saving purse",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierDelete",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClosePurseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClosePurseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/samples/optout": {
      "put": {
        "tags": [
          "Sample"
        ],
        "operationId": "ProgramsByProgramCodeSamplesOptoutPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptOutByProspectIdRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OptOutByProspectIdRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OptOutByProspectIdRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptOutByProspectIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptOutByProspectIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/samples/{prospectIdentifier}/accountMigration": {
      "post": {
        "tags": [
          "Sample"
        ],
        "summary": "",
        "operationId": "ProgramsByProgramCodeSamplesByProspectIdentifierAccountMigrationPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prospectIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountMigrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountMigrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountMigrationRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMigrationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMigrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/samples/{prospectIdentifier}": {
      "get": {
        "tags": [
          "Sample"
        ],
        "summary": "",
        "operationId": "ProgramsByProgramCodeSamplesByProspectIdentifierGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prospectIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProspectDetailsByIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProspectDetailsByIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/samples/{prospectId}/accountMigration/confirmation": {
      "get": {
        "tags": [
          "Sample"
        ],
        "summary": "Tsys migration confirmation",
        "operationId": "ProgramsByProgramCodeSamplesByProspectIdAccountMigrationConfirmationGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prospectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountMigrationItemConfirmationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountMigrationItemConfirmationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/ODFeeEligibleTransactions": {
      "get": {
        "tags": [
          "Scc"
        ],
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierODFeeEligibleTransactionsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetODFeeEligibleTransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetODFeeEligibleTransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/sccEligibilities": {
      "get": {
        "tags": [
          "SccEligibilities"
        ],
        "summary": "SccEligibilitiesCheck",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierSccEligibilitiesGet",
        "parameters": [
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SccEligibilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SccEligibilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/cliEligibilityCheck": {
      "get": {
        "tags": [
          "SccEligibilities"
        ],
        "summary": "CheckCreditLineIncreaseEligibility",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCliEligibilityCheckGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCreditLineIncreaseEligibilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCreditLineIncreaseEligibilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/cldEligibilityCheck": {
      "get": {
        "tags": [
          "SccEligibilities"
        ],
        "summary": "CheckCreditLineDecreaseEligibility",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCldEligibilityCheckGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCreditLineDecreaseEligibilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCreditLineDecreaseEligibilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions List",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransactionsGet",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/purses/{purseIdentifier}/interestEarned": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "GetInterestEarned",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierPursesByPurseIdentifierInterestEarnedGet",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purseIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInterestEarnedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInterestEarnedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/directdeposits": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get DirectDeposits information",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierDirectdepositsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDirectDepositsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDirectDepositsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transactions/cashBackRewards": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get cashBackReward Transactions List",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransactionsCashBackRewardsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includePurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashBackRewardTransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCashBackRewardTransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/transactions/relatedTransactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get relatedTransactions by transactionIdentifier",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTransactionsRelatedTransactionsGet",
        "parameters": [
          {
            "name": "transactionIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRelatedTransactionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRelatedTransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/ach": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create new ACH Transfer.",
        "operationId": "ProgramsByProgramCodeTransfersAchPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateACHRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateACHRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateACHRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateACHResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateACHResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/DeliveryDate": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "operationId": "ProgramsByProgramCodeDeliveryDateGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "achTransferType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "achDeliveryType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAchDeliveryDateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAchDeliveryDateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/mrdc": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create new MRDC Transfer",
        "operationId": "ProgramsByProgramCodeTransfersMrdcPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMrdcTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMrdcTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMrdcTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMrdcTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMrdcTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/assessment/mrdc": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "operationId": "ProgramsByProgramCodeTransfersAssessmentMrdcPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessMrdcTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessMrdcTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssessMrdcTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMrdcAssessmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMrdcAssessmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/{transferIdentifier}/mrdc/fundingDate": {
      "put": {
        "tags": [
          "Transfers"
        ],
        "summary": "Updates Funds Available Date to an earlier date",
        "operationId": "ProgramsByProgramCodeTransfersByTransferIdentifierMrdcFundingDatePut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFundsAvailableDateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFundsAvailableDateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFundsAvailableDateRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFundsAvailableDateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFundsAvailableDateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Transfer from partner to user or from purse to purse",
        "operationId": "ProgramsByProgramCodeTransfersPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/assessment": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Transfer from partner to user or from purse to purse",
        "operationId": "ProgramsByProgramCodeTransfersAssessmentPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssessTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/assessment/ach": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Assess an ACH Transfer.",
        "operationId": "ProgramsByProgramCodeTransfersAssessmentAchPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessACHRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessACHRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssessACHRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/{transferIdentifier}/assessment": {
      "put": {
        "tags": [
          "Transfers"
        ],
        "summary": "Assess Update Transfer",
        "operationId": "ProgramsByProgramCodeTransfersByTransferIdentifierAssessmentPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessUpdateTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessUpdateTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssessUpdateTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessUpdateTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessUpdateTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/{transferIdentifier}": {
      "put": {
        "tags": [
          "Transfers"
        ],
        "summary": "Update existing Transfer",
        "operationId": "ProgramsByProgramCodeTransfersByTransferIdentifierPut",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/wires": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "WireOut transfer",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierWiresPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WireOutRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WireOutRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WireOutRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WireOutResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WireOutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/account/{accountIdentifier}/externalbankaccount": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Returns a list link to external",
        "operationId": "ProgramsByProgramCodeAccountByAccountIdentifierExternalbankaccountPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchLinkExternalAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AchLinkExternalAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AchLinkExternalAccountRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchLinkExternalAccountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchLinkExternalAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/transfers/{transferToken}/guestcheckout": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Update existing Transfer",
        "operationId": "ProgramsByProgramCodeTransfersByTransferTokenGuestcheckoutPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transferToken",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTransferByTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTransferByTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTransferByTokenRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferByTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferByTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/bankNames": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "operationId": "ProgramsByProgramCodeBankNamesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankNameResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/fundfulfillment/mrdc": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "submit check for mrdc",
        "operationId": "ProgramsByProgramCodeFundfulfillmentMrdcPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MrdcPartialTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MrdcPartialTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MrdcPartialTransferRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrdcPartialTransferResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MrdcPartialTransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/trialDeposit": {
      "post": {
        "tags": [
          "TrialDeposit"
        ],
        "summary": "Create Trial Deposit",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTrialDepositPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrialDepositRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrialDepositRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrialDepositRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTrialDepositResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTrialDepositResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/trialDeposit/verify": {
      "post": {
        "tags": [
          "TrialDeposit"
        ],
        "summary": "VerifyTrialDeposit",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierTrialDepositVerifyPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyTrialDepositRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyTrialDepositRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyTrialDepositRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyTrialDepositResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyTrialDepositResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/externalBankAccounts": {
      "get": {
        "tags": [
          "TrialDeposit"
        ],
        "summary": "Get External Bank Accounts",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExternalBankAccountsGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExternalBankAccountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExternalBankAccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/externalBankAccounts/{externalBankAccountReferenceId}": {
      "put": {
        "tags": [
          "TrialDeposit"
        ],
        "summary": "Update External Bank Accounts Status",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierExternalBankAccountsByExternalBankAccountReferenceIdPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalBankAccountReferenceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalBankAccountStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalBankAccountStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalBankAccountStatusRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalBankAccountStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalBankAccountStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierPut",
        "parameters": [
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/name": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user Name",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierNamePut",
        "parameters": [
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserNameRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserNameRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserNameRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserNameResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/ValidateSsn": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get ValidateSsn for Baas Gateway",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierValidateSsnGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValidateSsnResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetValidateSsnResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Validate Ssn",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierValidateSsnPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateSsnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateSsnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateSsnRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSsnResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSsnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSsnResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSsnResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditLinesRange": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "GBOS-30359: Get credit line range",
        "description": "testing the swagger md file for ProgramsByProgramCodeAccountsByAccountIdentifierGet Id",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditLinesRangeGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "income",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "incomeFrequency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expense",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "expenseFrequency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditLineRangeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditLineRangeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/uploadAttachment": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierUploadAttachmentPost",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadConsumerProfileAttachmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadConsumerProfileAttachmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadConsumerProfileAttachmentRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadConsumerProfileAttachmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadConsumerProfileAttachmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/users/{userIdentifier}/consumerProfileExtension": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "ProgramsByProgramCodeUsersByUserIdentifierConsumerProfileExtensionGet",
        "parameters": [
          {
            "name": "programCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerProfileExtensionAttributes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsumerProfileExtensionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsumerProfileExtensionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/creditLinesSource": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "GBOS-30360 Update credit line source",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierCreditLinesSourcePut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLineSourceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLineSourceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLineSourceRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCreditLineSourceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCreditLineSourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/users/{userIdentifier}/getCreditScores": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "GetCreditScores for SCC users",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierUsersByUserIdentifierGetCreditScoresPost",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreditScoresRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreditScoresRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreditScoresRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditScoresResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditScoresResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/features/{featureId}": {
      "put": {
        "tags": [
          "VIPFeature"
        ],
        "summary": "Update Feature",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierFeaturesByFeatureIdPut",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featureId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFeatureResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFeatureResponse"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programCode}/accounts/{accountIdentifier}/features": {
      "get": {
        "tags": [
          "VIPFeature"
        ],
        "summary": "Get Feature",
        "operationId": "ProgramsByProgramCodeAccountsByAccountIdentifierFeaturesGet",
        "parameters": [
          {
            "name": "X-GD-RequestId",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeaturesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeaturesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "prospectIdentifier": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/AccountResponse"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolderBase"
            }
          },
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "cipLevel": {
            "type": "string"
          },
          "productMaterialType": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "activationDate": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "additionalPurses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "accountType": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "accountCycleDay": {
            "type": "integer",
            "format": "int32"
          },
          "accountEligibility": {
            "$ref": "#/components/schemas/AccountEligibility"
          }
        },
        "description": "sub-class of Account class, used in GetAccountResponse"
      },
      "ResponseDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "subCode": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "description": "ResponseDetail"
      },
      "AccountHolderBase": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "accountHolderIdentifier": {
            "type": "string"
          }
        }
      },
      "DirectDepositInformation": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          }
        }
      },
      "Purse": {
        "type": "object",
        "properties": {
          "purseIdentifier": {
            "type": "string"
          },
          "purseType": {
            "type": "string"
          },
          "purseDescription": {
            "type": "string"
          },
          "availableBalance": {
            "type": "number",
            "format": "double"
          },
          "ledgerBalance": {
            "type": "number",
            "format": "double"
          },
          "availableBalanceAsOfDateTime": {
            "type": "string"
          },
          "ledgerBalanceAsOfDateTime": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "goalAmount": {
            "type": "number",
            "format": "double"
          },
          "goalDate": {
            "type": "string"
          },
          "iconName": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "purseNumber": {
            "type": "string"
          },
          "interestRateTierIdentifier": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "interestYieldEndDate": {
            "type": "string"
          },
          "APY": {
            "type": "number",
            "format": "double"
          },
          "purseSubType": {
            "type": "string"
          }
        }
      },
      "TermsAcceptance": {
        "type": "object",
        "properties": {
          "termsIdentifier": {
            "type": "string"
          },
          "termsAcceptanceDateTime": {
            "type": "string"
          },
          "termsAcceptanceFlag": {
            "type": "boolean"
          }
        }
      },
      "AccountEligibility": {
        "type": "object",
        "properties": {
          "contactChangeEligibility": {
            "$ref": "#/components/schemas/ContactChangeEligibility"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dobStatus": {
            "type": "string"
          },
          "last4Identity": {
            "type": "string"
          },
          "identityType": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "peerTransferAcceptPreference": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isPrimaryAccountHolder": {
            "type": "boolean"
          },
          "kycStateData": {
            "$ref": "#/components/schemas/KycStateData"
          }
        },
        "description": "Container for user information"
      },
      "ContactChangeEligibility": {
        "type": "object",
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KycStateData": {
        "type": "object",
        "properties": {
          "ofacStatus": {
            "type": "string",
            "description": "KYC State Data"
          },
          "kycStatus": {
            "type": "string",
            "description": "KYC State Data"
          },
          "kycPendingGate": {
            "type": "string",
            "description": "KYC State Data"
          }
        }
      },
      "UpdateTermsAcceptancesRequest": {
        "type": "object",
        "properties": {
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          },
          "partnerAccountIdentifier": {
            "type": "string"
          },
          "encryptedEmail": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "EncryptedData": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Version of encryption algorithm used"
          },
          "ephemeralPublicKey": {
            "type": "string",
            "description": "Ephemeral public key"
          },
          "publicKeyHash": {
            "type": "string",
            "description": "Public key hash"
          },
          "data": {
            "type": "string",
            "description": "Encrypted data payload"
          }
        },
        "description": "Container for encrypted data"
      },
      "UpdateTermsAcceptancesResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetEStatementResponse": {
        "type": "object",
        "properties": {
          "statements": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetListEStatementResponse": {
        "type": "object",
        "properties": {
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Statement": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "statementPeriod": {
            "type": "string"
          },
          "statementPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "statementPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "periodStartDate": {
            "type": "string"
          },
          "periodEndDate": {
            "type": "string"
          }
        }
      },
      "SearchAccountResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountSearchResult"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountSearchResult": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "productKey": {
            "type": "integer",
            "format": "int32"
          },
          "programCode": {
            "type": "string"
          },
          "partnerKey": {
            "type": "integer",
            "format": "int32"
          },
          "accountStatusKey": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "accountHolderIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CloseAccountRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "CloseAccountResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/CloseAccount"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CloseAccount": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusReason": {
            "type": "string"
          },
          "kycPendingGate": {
            "type": "string"
          }
        }
      },
      "SetPartnerAccountStatusRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "enum": [
              "unknown",
              "healthy",
              "potentialFraud",
              "spendDown",
              "confirmedFraud",
              "potentialFirstPartyFraud",
              "confirmedFirstPartyFraud",
              "potentialThirdPartyFraud",
              "confirmedThirdPartyFraud",
              "potentialAccountTakeover",
              "confirmedAccountTakeover",
              "potentialIdentityTheft",
              "confirmedIdentityTheft",
              "potentialOtherFraud",
              "confirmedOtherFraud"
            ],
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "enum": [
              "unknown",
              "normal",
              "restricted",
              "locked"
            ],
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "SetPartnerAccountStatusResponse": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "kycPendingGate": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfile"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "peerTransferAcceptPreference": {
            "type": "string"
          },
          "profileData": {
            "$ref": "#/components/schemas/ProfileData"
          },
          "email": {
            "$ref": "#/components/schemas/Email"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identity"
            }
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          }
        }
      },
      "ProfileData": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "lastUpdatedDateTime": {
            "type": "string"
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "lastUpdatedDateTime": {
            "type": "string"
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "lastUpdatedDateTime": {
            "type": "string"
          }
        }
      },
      "Identity": {
        "type": "object",
        "properties": {
          "identityType": {
            "enum": [
              "sSN",
              "drivingLicense",
              "passport",
              "matriculaId",
              "iTIN",
              "eIN"
            ],
            "type": "string"
          },
          "last4Identity": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isReturned": {
            "type": "boolean"
          },
          "lastUpdatedDateTime": {
            "type": "string"
          }
        },
        "description": "Container for address information"
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "peerTransferAcceptPreference": {
            "type": "string"
          },
          "encryptedUserData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          },
          "contactVerificationIdentifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "userIdCreateDate": {
            "type": "string"
          },
          "passwordChangeDate": {
            "type": "string"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateItinResquest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "encryptedIdNumber": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "UpdateItinResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "FraudKycCureRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "encryptedUserData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "FraudKycCureResponse": {
        "type": "object",
        "properties": {
          "kycGate": {
            "$ref": "#/components/schemas/KycGate"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "KycGate": {
        "type": "object",
        "properties": {
          "kycStateData": {
            "$ref": "#/components/schemas/KycStateData"
          }
        }
      },
      "GetACHTransfersResponse": {
        "type": "object",
        "properties": {
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": ""
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "achTransferType": {
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          },
          "submissionDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "achTransferStatus": {
            "type": "string"
          },
          "returnDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "returnReasonCode": {
            "type": "string"
          },
          "returnStatus": {
            "type": "string"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "bankAccountType": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "last4BankAccountNumber": {
            "type": "string"
          }
        }
      },
      "UpdateCheckRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "transferAuthorizationType": {
            "type": "string"
          }
        }
      },
      "UpdateCheckResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/MrdcTransfer"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response object for UpdateCheck API"
      },
      "MrdcTransfer": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "transferStatus": {
            "type": "string"
          },
          "checkDeposit": {
            "$ref": "#/components/schemas/CheckDepositInfo"
          },
          "submissionDateTime": {
            "type": "string"
          }
        }
      },
      "CheckDepositInfo": {
        "type": "object",
        "properties": {
          "checkDepositStatus": {
            "type": "string"
          },
          "checkDepositSubStatus": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "checkSubmitDate": {
            "type": "string"
          },
          "fundsAvailableDate": {
            "type": "string"
          },
          "depositDate": {
            "type": "string"
          },
          "lastChangedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "checkReturnedDate": {
            "type": "string"
          },
          "checkCanceledDate": {
            "type": "string"
          },
          "checkDeclinedDate": {
            "type": "string"
          },
          "rejectReason": {
            "type": "string"
          },
          "hasScheduleChanged": {
            "type": "string"
          },
          "isManualReview": {
            "type": "boolean"
          },
          "isInstantFund": {
            "type": "boolean"
          }
        }
      },
      "GetMrdcTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/MrdcTransfer"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetFundFulfillmentMrdcTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/FundFulfillmentMrdcTransfer"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "FundFulfillmentMrdcTransfer": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "transferStatus": {
            "type": "string"
          },
          "checkAmount": {
            "type": "number",
            "format": "double"
          },
          "checkSubmitDate": {
            "type": "string"
          },
          "checkReturnedDate": {
            "type": "string"
          },
          "checkCanceledDate": {
            "type": "string"
          },
          "checkDeclinedDate": {
            "type": "string"
          },
          "rejectReason": {
            "type": "string"
          },
          "postingInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialPostingInfo"
            }
          }
        }
      },
      "PartialPostingInfo": {
        "type": "object",
        "properties": {
          "postingInfoToken": {
            "type": "string"
          },
          "postingInfoStatus": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "depositDate": {
            "type": "string"
          },
          "fundsAvailableDate": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          }
        }
      },
      "GetMrdcTransferListResponse": {
        "type": "object",
        "properties": {
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MrdcTransfer"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetFundFulfillmentMrdcTransferListResponse": {
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundFulfillmentMrdcTransfer"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCheckImagesResponse": {
        "type": "object",
        "properties": {
          "encryptedCheckImageData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetOnHoldTransfersResponse": {
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferDetail"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "TransferDetail": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          },
          "isSource": {
            "type": "boolean"
          },
          "transferStatus": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "mobilePhoneNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          }
        }
      },
      "GetP2PTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/P2PTransfer"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": ""
      },
      "P2PTransfer": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Transfer identifier"
          },
          "date": {
            "type": "string",
            "description": "Transaction Date"
          },
          "isSource": {
            "type": "boolean",
            "description": "Is source"
          },
          "transferType": {
            "type": "string",
            "description": "Transfer Type"
          },
          "transferStatus": {
            "type": "string",
            "description": "Transfer status"
          },
          "transferStatusReason": {
            "type": "string",
            "description": "Transfer status reason"
          },
          "initiator": {
            "type": "string",
            "description": "Initiator"
          },
          "transactionAmount": {
            "type": "number",
            "description": "transfer amount",
            "format": "double"
          },
          "memo": {
            "type": "string",
            "description": "Memo"
          },
          "transactionIdentifier": {
            "type": "string",
            "description": "Transaction Identifier"
          },
          "paymentSource": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Transaction Description"
          },
          "sourceInformation": {
            "$ref": "#/components/schemas/Consumer"
          },
          "targetInformation": {
            "$ref": "#/components/schemas/Consumer"
          },
          "transDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EGiftDetail"
            },
            "description": "information for egifts"
          },
          "expectedFundingDate": {
            "type": "string",
            "description": "Expected Funding Date",
            "format": "date-time"
          },
          "bankAccountType": {
            "type": "string",
            "description": "Bank Account Type"
          },
          "bankName": {
            "type": "string",
            "description": "Bank Name"
          },
          "last4BankAccountNumber": {
            "type": "string",
            "description": "Last 4 Digit of Bank Account Number"
          },
          "achTransferStatus": {
            "type": "string",
            "description": "Ach Transfer Status"
          }
        },
        "description": "P2P transfer"
      },
      "Consumer": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string",
            "description": "Account Identifier"
          },
          "purseIdentifier": {
            "type": "string",
            "description": "purse identifier"
          },
          "purseNumber": {
            "type": "string",
            "description": "purse number"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "nickName": {
            "type": "string",
            "description": "nick name"
          },
          "handle": {
            "type": "string",
            "description": "handler of source/target"
          },
          "merchantName": {
            "type": "string",
            "description": "MerchantName"
          },
          "storeNumber": {
            "type": "string",
            "description": "StoreNumber"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "last4Pan": {
            "type": "string"
          },
          "association": {
            "type": "string"
          },
          "fundingSource": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "last4AccountNumber": {
            "type": "string"
          }
        },
        "description": "Source Information / Target information"
      },
      "EGiftDetail": {
        "type": "object",
        "properties": {
          "transactionIdentifier": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "transClass": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sourceInformation": {
            "$ref": "#/components/schemas/Consumer"
          },
          "targetInformation": {
            "$ref": "#/components/schemas/Consumer"
          }
        }
      },
      "GetAllP2PTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/P2PTransfer"
            },
            "description": ""
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": ""
      },
      "GetAllExternalCardsResponse": {
        "type": "object",
        "properties": {
          "externalCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalCard"
            }
          },
          "maxCardsAllowed": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ExternalCard": {
        "type": "object",
        "properties": {
          "accountExternalPaymentIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "network": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "fundingEligible": {
            "type": "boolean"
          },
          "withdrawalEligible": {
            "type": "boolean"
          },
          "last4PAN": {
            "type": "string"
          }
        }
      },
      "DeleteExternalCardResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AddAccountHolderRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EncryptedUser"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "requestPhysicalCardFlag": {
            "type": "boolean"
          },
          "encryptedPin": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "initialEnrollmentFlowFlag": {
            "type": "boolean"
          },
          "encryptedFraudData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "EncryptedUser": {
        "type": "object",
        "properties": {
          "encryptedUserData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          }
        },
        "description": "Container for user information"
      },
      "Account": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "cipLevel": {
            "type": "string"
          },
          "productMaterialType": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "activationDate": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "additionalPurses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolder"
            }
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "accountType": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "accountCycleDay": {
            "type": "integer",
            "format": "int32"
          },
          "accountEligibility": {
            "$ref": "#/components/schemas/AccountEligibility"
          }
        },
        "description": "Container for account details"
      },
      "AccountHolder": {
        "type": "object",
        "properties": {
          "paymentInstruments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInstrument"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "accountHolderIdentifier": {
            "type": "string"
          }
        }
      },
      "PaymentInstrument": {
        "type": "object",
        "properties": {
          "encryptedPrivatePaymentInstrumentData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "paymentInstrumentType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "enum": [
                "damaged",
                "neverReceived",
                "returnedMail",
                "expired",
                "unusedCard",
                "lostStolen",
                "upgraded",
                "nameChange",
                "suspiciousActivity",
                "massCompromised",
                "lost",
                "stolen",
                "unauthorizedUse",
                "compromised",
                "accountBlocked",
                "customerInitiatedHold"
              ],
              "type": "string"
            }
          },
          "isPinSet": {
            "type": "boolean"
          },
          "last4Pan": {
            "type": "string"
          },
          "activatedDateTime": {
            "type": "string"
          },
          "cardPausedDateTime": {
            "type": "string"
          },
          "issuedDateTime": {
            "type": "string"
          },
          "isPrivateDataViewable": {
            "type": "boolean"
          },
          "embossedName": {
            "type": "string"
          },
          "customCardImageIdentifier": {
            "type": "string"
          },
          "paymentInstrumentLevel": {
            "enum": [
              "personalized",
              "nonPersonalized"
            ],
            "type": "string"
          }
        }
      },
      "AddAccountHolderResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Enrollment"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Enrollment": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolder"
            }
          },
          "accountCycleDay": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetLinkedAccountResponse": {
        "type": "object",
        "properties": {
          "accountLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountLink"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountLink": {
        "type": "object",
        "properties": {
          "primaryAccountIdentifier": {
            "type": "string"
          },
          "linkAccountIdentifier": {
            "type": "string"
          },
          "accountLinkType": {
            "enum": [
              "savings",
              "secureCreditCard"
            ],
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetAuthCustomerSSOTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCustomerEnrollmentResponse": {
        "type": "object",
        "properties": {
          "enrollmentStatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "enrollmentStatus": {
            "enum": [
              "userNotEnrolled",
              "enrolled"
            ],
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "OdEligibilityCheckResponse": {
        "type": "object",
        "properties": {
          "qualifiedTier": {
            "type": "integer",
            "format": "int32"
          },
          "overdraftCushionLimit": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetDocumentResponse": {
        "type": "object",
        "properties": {
          "documentFile": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetListDocumentResponse": {
        "type": "object",
        "properties": {
          "documentStatements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatement"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DocumentStatement": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "AdjustBalanceRequest": {
        "type": "object",
        "properties": {
          "adjustmentIdentifier": {
            "type": "string",
            "description": "transferIdentifier"
          },
          "amount": {
            "type": "number",
            "description": "amount",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "currency"
          },
          "adjustmentType": {
            "type": "string",
            "description": "adjustmentType"
          },
          "adjustmentDescription": {
            "type": "string",
            "description": "adjustmentDescription"
          },
          "fee": {
            "type": "number",
            "description": "fee",
            "format": "double"
          },
          "debitToNegative": {
            "type": "boolean",
            "description": "DebitToNegative"
          }
        },
        "description": "Adjust balance"
      },
      "AdjustBalanceResponse": {
        "type": "object",
        "properties": {
          "adjustmentStatus": {
            "type": "string",
            "description": "Transfer status"
          },
          "adjustmentStatusReason": {
            "type": "string",
            "description": "TransferStatusReason"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Adjust balance response"
      },
      "GetAdjustAccountBalanceStatusResponse": {
        "type": "object",
        "properties": {
          "adjustmentIdentifier": {
            "type": "string",
            "description": "transferIdentifier",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "description": "amount",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "currency"
          },
          "adjustmentType": {
            "type": "string",
            "description": "adjustmentType"
          },
          "adjustmentDescription": {
            "type": "string",
            "description": "adjustmentDescription"
          },
          "fee": {
            "type": "number",
            "description": "fee",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "description": "TransactionDate"
          },
          "adjustmentStatus": {
            "type": "string",
            "description": "Transfer status"
          },
          "adjustmentStatusReason": {
            "type": "string",
            "description": "TransferStatusReason"
          },
          "debitToNegative": {
            "type": "boolean"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "GetAdjustAccountBalanceStatusResponse"
      },
      "CreateAMMRuleRequest": {
        "required": [
          "ruleType",
          "ruleFrequency",
          "startDate",
          "qualifyAmount",
          "handleType"
        ],
        "type": "object",
        "properties": {
          "ruleType": {
            "type": "string"
          },
          "ruleFrequency": {
            "type": "string"
          },
          "ammRuleName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "qualifyAmount": {
            "type": "number",
            "format": "double"
          },
          "maxCapAmount": {
            "type": "number",
            "format": "double"
          },
          "targetPurseID": {
            "type": "string",
            "format": "uuid"
          },
          "targetAccountID": {
            "type": "string",
            "format": "uuid"
          },
          "contactName": {
            "type": "string"
          },
          "targetHandle": {
            "type": "string"
          },
          "handleType": {
            "type": "string"
          },
          "rulePriority": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "fixedTransferAmount": {
            "type": "number",
            "format": "double"
          },
          "transferPercentage": {
            "type": "number",
            "format": "double"
          },
          "isRoundUpTransfer": {
            "type": "boolean"
          },
          "scheduleDay": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          },
          "paymentAmountOption": {
            "type": "string"
          },
          "sourceOption": {
            "type": "string"
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32"
          },
          "isEdit": {
            "type": "boolean"
          },
          "preRuleID": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateAMMRuleResponse": {
        "type": "object",
        "properties": {
          "ruleEnrollmentKey": {
            "type": "integer",
            "format": "int64"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DeleteAMMRuleRequest": {
        "required": [
          "ruleID"
        ],
        "type": "object",
        "properties": {
          "ruleID": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeleteAMMRuleResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateAMMRuleRequest": {
        "required": [
          "ruleID"
        ],
        "type": "object",
        "properties": {
          "ruleID": {
            "type": "integer",
            "format": "int64"
          },
          "ammRuleName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "maxCapAmount": {
            "type": "number",
            "format": "double"
          },
          "rulePriority": {
            "type": "integer",
            "format": "int32"
          },
          "fixedTransferAmount": {
            "type": "number",
            "format": "double"
          },
          "transferPercentage": {
            "type": "number",
            "format": "double"
          },
          "scheduleDay": {
            "type": "integer",
            "format": "int32"
          },
          "ruleFrequency": {
            "type": "string"
          }
        }
      },
      "UpdateAMMRuleResponse": {
        "type": "object",
        "properties": {
          "updatedRule": {
            "$ref": "#/components/schemas/AMMRule"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AMMRule": {
        "type": "object",
        "properties": {
          "ruleID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string",
            "format": "uuid"
          },
          "ruleType": {
            "type": "string"
          },
          "ruleFrequency": {
            "type": "string"
          },
          "ammRuleName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "qualifyAmount": {
            "type": "number",
            "format": "double"
          },
          "maxCapAmount": {
            "type": "number",
            "format": "double"
          },
          "targetPurseID": {
            "type": "string",
            "format": "uuid"
          },
          "targetAccountID": {
            "type": "string",
            "format": "uuid"
          },
          "contactName": {
            "type": "string"
          },
          "targetHandle": {
            "type": "string"
          },
          "handleType": {
            "type": "string"
          },
          "rulePriority": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "fixedTransferAmount": {
            "type": "number",
            "format": "double"
          },
          "transferPercentage": {
            "type": "number",
            "format": "double"
          },
          "isRoundUpTransfer": {
            "type": "boolean"
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "scheduleDay": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string"
          },
          "ruleStatus": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMMTransaction"
            }
          },
          "paymentAmountOption": {
            "type": "string"
          },
          "sourceOption": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          },
          "nextExecutionDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AMMTransaction": {
        "type": "object",
        "properties": {
          "ammTransactionKey": {
            "type": "integer",
            "format": "int64"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "transferIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "transactionStatus": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateAMMRulePriorityRequest": {
        "required": [
          "rulePriorities"
        ],
        "type": "object",
        "properties": {
          "rulePriorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMMRulePriority"
            }
          }
        }
      },
      "AMMRulePriority": {
        "type": "object",
        "properties": {
          "ruleID": {
            "type": "integer",
            "format": "int64"
          },
          "rulePriority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateAMMRulePriorityResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetAMMRuleResponse": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMMRule"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateAMMRuleStatusRequest": {
        "type": "object",
        "properties": {
          "ruleStatus": {
            "enum": [
              "active",
              "inactive",
              "expiring",
              "completed",
              "paused"
            ],
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateAMMRuleStatusResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreatePayeeRequest": {
        "type": "object",
        "properties": {
          "payeeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          }
        }
      },
      "CreatePayeeResponse": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeStatus": {
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetPayeeListResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeDetail"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "PayeeDetail": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeStatus": {
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          },
          "payeeType": {
            "enum": [
              "person",
              "merchant"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "GetPayeeResponse": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeStatus": {
            "type": "string"
          },
          "payeeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Get Payee by PayeeIdentifier Response"
      },
      "UpdatePayeeRequest": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UpdatePayeeResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DeletePayeeResponse": {
        "type": "object",
        "properties": {
          "payeeStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SearchPayeeRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchPayeeResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payee"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Payee": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "merchantZipRequired": {
            "type": "boolean"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "payeeIdentifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string"
          },
          "paymentEndDate": {
            "type": "string"
          },
          "paymentMemo": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "frequencyType": {
            "type": "string"
          }
        },
        "description": "CreatePaymentRequest"
      },
      "CreatePaymentResponse": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "CreatePaymentResponse"
      },
      "GetAllPaymentResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "paymentStatus": {
            "enum": [
              "scheduled",
              "canceled",
              "failed",
              "inProcess",
              "processed",
              "unApproved"
            ],
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "paymentStartDate": {
            "type": "string"
          },
          "paymentEndDate": {
            "type": "string"
          },
          "frequencyType": {
            "type": "string"
          }
        }
      },
      "GetPaymentResponse": {
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/PaymentDetail"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "PaymentDetail": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string"
          },
          "paymentMemo": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "paymentStartDate": {
            "type": "string"
          },
          "paymentEndDate": {
            "type": "string"
          },
          "frequencyType": {
            "type": "string"
          }
        }
      },
      "UpdatePaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string"
          },
          "paymentEndDate": {
            "type": "string"
          },
          "frequencyType": {
            "type": "string"
          },
          "paymentMemo": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "UpdatePaymentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DeletePaymentResponse": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "DeletePaymentResponse"
      },
      "GetBusinessProfileResponse": {
        "type": "object",
        "properties": {
          "businessProfile": {
            "$ref": "#/components/schemas/BusinessProfile"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "BusinessProfile": {
        "type": "object",
        "properties": {
          "businessType": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "businessLegalName": {
            "type": "string"
          },
          "businessAddressLine1": {
            "type": "string"
          },
          "businessAddressLine2": {
            "type": "string"
          },
          "businessCity": {
            "type": "string"
          },
          "businessState": {
            "type": "string"
          },
          "businessZipCode": {
            "type": "string"
          },
          "businessCountryCode": {
            "type": "string"
          },
          "businessEmailAddress": {
            "type": "string"
          }
        },
        "description": "Business profile entity for updating only"
      },
      "UpdateBusinessProfileRequest": {
        "type": "object",
        "properties": {
          "businessProfile": {
            "$ref": "#/components/schemas/BusinessProfile"
          }
        }
      },
      "UpdateBusinessProfileResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetReplacementCardResponse": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardOption"
            },
            "description": "card options"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response for getting card option"
      },
      "CardOption": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string",
            "description": "Card Type"
          },
          "fee": {
            "type": "number",
            "description": "Fee",
            "format": "double"
          },
          "isFreeEligible": {
            "type": "boolean",
            "description": "isFreeEligible"
          }
        },
        "description": "card option information"
      },
      "CareCaseRequest": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Subject of question"
          },
          "firstName": {
            "type": "string",
            "description": "First Name of User"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of User"
          },
          "customerQuestion": {
            "type": "string",
            "description": "Question details collected from customer"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "Account Identifier"
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/Phone"
          },
          "device": {
            "$ref": "#/components/schemas/CaseDevice"
          }
        },
        "description": "Care case request"
      },
      "Phone": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Phone number"
          },
          "type": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "Phone number type",
            "format": "int32"
          }
        },
        "description": "Phone"
      },
      "CaseDevice": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "DeviceId"
          },
          "deviceMake": {
            "type": "string",
            "description": "DeviceMake"
          },
          "deviceVersion": {
            "type": "string",
            "description": "DeviceVersion"
          },
          "deviceOS": {
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "DeviceOS",
            "format": "int32"
          },
          "deviceOSVersion": {
            "type": "string",
            "description": "DeviceOSVersion"
          }
        },
        "description": "Device for care case"
      },
      "CareCaseResponse": {
        "type": "object",
        "properties": {
          "caseNumber": {
            "type": "string",
            "description": "case number"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "care case response"
      },
      "GetCashbackRewardBusinessProcessRulesResponse": {
        "type": "object",
        "properties": {
          "businessProcessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashBackRewardBusinessProcessRule"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CashBackRewardBusinessProcessRule": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string"
          },
          "categoryType": {
            "type": "integer",
            "format": "int32"
          },
          "categoryCode": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "description": "Flex2 Flex3 Flex4"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GetCashbackRewardSummaryResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashBackRewardCategory"
            }
          },
          "rewardAmount": {
            "type": "number",
            "format": "double"
          },
          "hasPurchased": {
            "type": "boolean"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CashBackRewardCategory": {
        "type": "object",
        "properties": {
          "rewardAmount": {
            "type": "number",
            "format": "double"
          },
          "categoryName": {
            "type": "string",
            "description": "categoryName"
          },
          "categoryType": {
            "type": "integer",
            "description": "categoryType",
            "format": "int32"
          },
          "categoryCode": {
            "type": "string",
            "description": "categoryCode"
          }
        }
      },
      "SetUserCategoryRequest": {
        "type": "object",
        "properties": {
          "categoriedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriedTransaction"
            }
          }
        }
      },
      "CategoriedTransaction": {
        "type": "object",
        "properties": {
          "transactionIdentifier": {
            "type": "string"
          },
          "userCategory": {
            "type": "string"
          }
        }
      },
      "SetUserCategoryResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCategoriedTransactionResponse": {
        "type": "object",
        "properties": {
          "categoriedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriedTransaction"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetUserCategorySummaryResponse": {
        "type": "object",
        "properties": {
          "userCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionUserCategory"
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "TransactionUserCategory": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "userCategoryDescription": {
            "type": "string",
            "description": "userCategoryDescription"
          },
          "userCategoryKey": {
            "type": "integer",
            "description": "categoryType",
            "format": "int32"
          },
          "userCategory": {
            "enum": [
              "gas",
              "maintenance",
              "general",
              "personal"
            ],
            "type": "string",
            "description": "userCategory"
          }
        }
      },
      "CNAPITransferRequest": {
        "required": [
          "productCode",
          "programCode"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "programCode": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "requestHeader": {
            "$ref": "#/components/schemas/CNAPIRequestHeader"
          }
        }
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CNAPIRequestHeader": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "CNAPITransferResponse": {
        "type": "object",
        "properties": {
          "responseHeader": {
            "$ref": "#/components/schemas/CNAPIResponseHeader"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CNAPIResponseHeader": {
        "type": "object",
        "properties": {
          "responseId": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "subStatusCode": {
            "type": "string"
          },
          "statusMessage": {
            "type": "string"
          }
        }
      },
      "GenerateVerificationsRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "verificationEventType": {
            "type": "string",
            "description": "VerificationEventType"
          },
          "contactType": {
            "type": "string",
            "description": "ContactType"
          },
          "communicationType": {
            "type": "string"
          },
          "contactHandle": {
            "type": "string",
            "description": "ContactHandle"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "productCode": {
            "type": "string",
            "description": "Product Code"
          },
          "retailCardIdentifier": {
            "type": "string",
            "description": "RetailCardIdentifier - it is legacy NEC temp card reference number"
          }
        },
        "description": "CreateVerificationsRequest"
      },
      "GenerateVerificationsResponse": {
        "type": "object",
        "properties": {
          "contactVerificationIdentifier": {
            "type": "string",
            "description": "ContactVerificationIdentifier"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "CreateVerificationsResponse"
      },
      "CheckVerificationsRequest": {
        "type": "object",
        "properties": {
          "contactVerificationIdentifier": {
            "type": "string",
            "description": "ContactVerificationIdentifier"
          },
          "verificationCode": {
            "type": "string",
            "description": "VerificationCode"
          }
        },
        "description": "CheckVerificationsRequest"
      },
      "CheckVerificationsResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AddressVerificationRequest": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "AddressVerificationResponse": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericAddress"
            }
          },
          "isValidAddress": {
            "type": "boolean"
          },
          "matchLevel": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GenericAddress": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "GetContactVerificationStatusResponse": {
        "type": "object",
        "properties": {
          "sessionIdentifier": {
            "type": "string"
          },
          "contactVerificationStatus": {
            "type": "integer",
            "format": "int32"
          },
          "contactType": {
            "enum": [
              "phone",
              "email"
            ],
            "type": "string"
          },
          "communicationType": {
            "enum": [
              "sMS",
              "email",
              "voiceCall"
            ],
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblEligibilityCheckResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblAtpCheckResponse": {
        "type": "object",
        "properties": {
          "atpValue": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblVelocityCheckResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountCreateDate": {
            "type": "string",
            "format": "date-time"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblGetLoanPreviewResponse": {
        "type": "object",
        "properties": {
          "totalPrincipalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalInterestAmount": {
            "type": "number",
            "format": "double"
          },
          "loanTerm": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "monthlyFixedAmount": {
            "type": "number",
            "format": "double"
          },
          "apr": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblCancelAutoPaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "CblCancelAutoPaymentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblCreateAutoPaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "autoPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "autoPaymentDay": {
            "type": "integer",
            "format": "int32"
          },
          "paymentChannel": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CblCreateAutoPaymentResponse": {
        "type": "object",
        "properties": {
          "autoPaymentStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblGetAutoPaymentResponse": {
        "type": "object",
        "properties": {
          "autoPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CblAutoPayment"
            }
          },
          "nextScheduledDate": {
            "type": "string",
            "format": "date-time"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblAutoPayment": {
        "type": "object",
        "properties": {
          "autoPaymentRuleEnrollmentIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "scheduleDay": {
            "type": "integer",
            "format": "int32"
          },
          "transferAmount": {
            "type": "number",
            "format": "double"
          },
          "ruleStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "ruleEndDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CblOpenLoanRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "income": {
            "type": "number",
            "format": "double"
          },
          "expense": {
            "type": "number",
            "format": "double"
          },
          "incomeFrequency": {
            "type": "string"
          },
          "expenseFrequency": {
            "type": "string"
          },
          "loanPlanKey": {
            "type": "integer",
            "format": "int32"
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          }
        }
      },
      "CblOpenLoanResponse": {
        "type": "object",
        "properties": {
          "accountLoanPlanIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblCloseLoanRequest": {
        "type": "object",
        "properties": {
          "source": {
            "enum": [
              "unknown",
              "crm",
              "customer"
            ],
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "CblCloseLoanResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblGetLoanResponse": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/AccountLoanPlanSummary"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepaymentPlanDetail"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanPaymentTransaction"
            }
          },
          "amortizationTable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmortizationItem"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountLoanPlanSummary": {
        "type": "object",
        "properties": {
          "totalPrincipalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalInterestAmount": {
            "type": "number",
            "format": "double"
          },
          "loanTerm": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "initialEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "fixedMonthlyAmount": {
            "type": "number",
            "format": "double"
          },
          "apr": {
            "type": "number",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "format": "double"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time"
          },
          "remainingPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "maxAllowedPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "cure": {
            "enum": [
              "payment",
              "idv"
            ],
            "type": "string"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "pendingRefund",
              "closure",
              "restricted",
              "locked"
            ],
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "termComplete",
                "prepaid",
                "terminatedByCustomer",
                "terminatedByGreenDot",
                "refundToDda",
                "refundViaCheck",
                "dpd1",
                "dpd30",
                "dpd60",
                "dpd90",
                "dpd120",
                "dpd150",
                "accountUnderReview",
                "confirmedFraud",
                "identityTheft",
                "chargeOff",
                "bankruptcy",
                "ofacMatch",
                "creditTempBenefit",
                "bankruptcyA",
                "bankruptcyB",
                "bankruptcyC",
                "bankruptcyD",
                "bankruptcyM",
                "bankruptcyN",
                "bankruptcyO",
                "bankruptcyP",
                "bankruptcyQ",
                "bankruptcyZ"
              ],
              "type": "string"
            }
          }
        }
      },
      "RepaymentPlanDetail": {
        "type": "object",
        "properties": {
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "interestAmount": {
            "type": "number",
            "format": "double"
          },
          "principalAmount": {
            "type": "number",
            "format": "double"
          },
          "lateFee": {
            "type": "number",
            "format": "double"
          },
          "earlyPaymentFee": {
            "type": "number",
            "format": "double"
          },
          "remainingLoanAmount": {
            "type": "number",
            "format": "double"
          },
          "maxAllowedPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "actualPaymentReceived": {
            "type": "number",
            "format": "double"
          },
          "actualInterestAmountReceived": {
            "type": "number",
            "format": "double"
          },
          "actualPrincipalAmountReceived": {
            "type": "number",
            "format": "double"
          },
          "actualLateFeeReceived": {
            "type": "number",
            "format": "double"
          },
          "actualEarlyPaymentFeeReceived": {
            "type": "number",
            "format": "double"
          },
          "actualRemainingLoanAmount": {
            "type": "number",
            "format": "double"
          },
          "repaymentPlanDetailStatus": {
            "enum": [
              "unknown",
              "pending",
              "processing",
              "active",
              "paidOnTime",
              "prepaid",
              "missed",
              "cancelled"
            ],
            "type": "string"
          }
        }
      },
      "LoanPaymentTransaction": {
        "type": "object",
        "properties": {
          "transferAmount": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "transactionToken": {
            "type": "string",
            "format": "uuid"
          },
          "scheduleType": {
            "enum": [
              "unknown",
              "cBLAutoPaymentSchedule",
              "cBLManualPaymentSchedule"
            ],
            "type": "string"
          },
          "loanPaymentTransactionType": {
            "enum": [
              "unknown",
              "loanPayment",
              "refund",
              "interest",
              "lateFee",
              "refundEmptyLoanPurse",
              "refundByCrmCase",
              "refundScraInterest",
              "reverseLateFee",
              "reverseInterest",
              "reverseEarlyFee",
              "earlyFee",
              "refundScraInterestByCrmCase"
            ],
            "type": "string"
          },
          "transactionStatus": {
            "enum": [
              "unknown",
              "pending",
              "settled",
              "reversed",
              "cancelled",
              "rejected"
            ],
            "type": "string"
          }
        }
      },
      "AmortizationItem": {
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "interestAmount": {
            "type": "number",
            "format": "double"
          },
          "principalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingLoanAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CblGetLoanTemplateResponse": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanPlan"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "LoanPlan": {
        "type": "object",
        "properties": {
          "loanPlanKey": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyFixedAmount": {
            "type": "number",
            "format": "double"
          },
          "loanTermLength": {
            "type": "integer",
            "format": "int32"
          },
          "totalPrincipalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalInterestAmount": {
            "type": "number",
            "format": "double"
          },
          "apr": {
            "type": "number",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "format": "double"
          },
          "totalLoanAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CblPaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "transferAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentDay": {
            "type": "string",
            "format": "date-time"
          },
          "sourceSystem": {
            "enum": [
              "partner",
              "cRM",
              "iVR",
              "aMM",
              "web",
              "app"
            ],
            "type": "string"
          }
        }
      },
      "CblPaymentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblGetLoansResponse": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrmLoanInfo"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CrmLoanInfo": {
        "type": "object",
        "properties": {
          "accountLoanPlanIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "pendingRefund",
              "closure",
              "restricted",
              "locked"
            ],
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CblCancelScheduledPaymentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblGetScheduledPaymentResponse": {
        "type": "object",
        "properties": {
          "scheduledPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CblScheduledPayment"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CblScheduledPayment": {
        "type": "object",
        "properties": {
          "autoPaymentRuleEnrollmentIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "transferAmount": {
            "type": "number",
            "format": "double"
          },
          "scheduledPaymentDay": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetCustomCardResponse": {
        "type": "object",
        "properties": {
          "customCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomCard"
            },
            "description": "card information"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response of custom card"
      },
      "CustomCard": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "card status"
          },
          "isActive": {
            "type": "boolean",
            "description": "is active"
          },
          "attemptsRemaining": {
            "type": "integer",
            "description": "AttemptsRemaining",
            "format": "int32"
          },
          "orderDate": {
            "type": "string",
            "description": "card order date",
            "format": "date-time"
          },
          "customImage": {
            "$ref": "#/components/schemas/CustomCardImage"
          }
        },
        "description": "Custom card"
      },
      "CustomCardImage": {
        "required": [
          "customCardImageIdentifier"
        ],
        "type": "object",
        "properties": {
          "imageStatus": {
            "type": "string",
            "description": "Image status"
          },
          "statusReason": {
            "type": "string",
            "description": "Status reason"
          },
          "thumbNail": {
            "type": "string",
            "description": "ThumbNail",
            "format": "byte"
          },
          "customCardImageIdentifier": {
            "type": "string",
            "description": "Custom card Image Identifier"
          }
        },
        "description": "custom card image"
      },
      "CreateCustomCardRequest": {
        "type": "object",
        "properties": {
          "imageData": {
            "type": "string",
            "description": "ImageData",
            "format": "byte"
          }
        },
        "description": "create custom card"
      },
      "CreateCustomCardResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "create custom card response"
      },
      "CancelCustomCardResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DeviceVerificationRequest": {
        "required": [
          "eventType",
          "blackBox",
          "endUserIpAddress"
        ],
        "type": "object",
        "properties": {
          "eventType": {
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "Event Type",
            "format": "int32"
          },
          "blackBox": {
            "type": "string",
            "description": "Black box"
          },
          "endUserIpAddress": {
            "type": "string",
            "description": "End user IP address"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "AccountIdentifier"
          },
          "userIdentifier": {
            "type": "string",
            "description": "UserIdentifier"
          },
          "transferIdentifier": {
            "type": "string",
            "description": "TransferIdentifier"
          }
        },
        "description": "Request for Device verification"
      },
      "DeviceVerificationResponse": {
        "type": "object",
        "properties": {
          "deviceVerificationDetail": {
            "$ref": "#/components/schemas/DeviceVerificationDetail"
          },
          "deviceVerificationResult": {
            "$ref": "#/components/schemas/DeviceVerificationResult"
          },
          "deviceVerificationRequestKey": {
            "type": "integer",
            "description": "DeviceVerificationRequestKey",
            "format": "int64"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "DeviceVerificationResponse"
      },
      "DeviceVerificationDetail": {
        "required": [
          "deviceToken",
          "deviceType",
          "deviceModel",
          "browserType"
        ],
        "type": "object",
        "properties": {
          "deviceToken": {
            "type": "string",
            "description": "Device token"
          },
          "deviceType": {
            "type": "string",
            "description": "Device Type"
          },
          "deviceModel": {
            "type": "string",
            "description": "Device model"
          },
          "browserType": {
            "type": "string",
            "description": "Browser Type"
          }
        },
        "description": "DeviceVerificationDetail"
      },
      "DeviceVerificationResult": {
        "type": "object",
        "properties": {
          "isVerified": {
            "type": "boolean",
            "description": "IsVerified"
          },
          "responseDetailCode": {
            "type": "integer",
            "description": "ResponseDetailCode",
            "format": "int32"
          },
          "responseDetailDescription": {
            "type": "string",
            "description": "ResponseDetailDescription"
          }
        },
        "description": "DeviceVerificationResult"
      },
      "UpdateVerificationRequest": {
        "required": [
          "deviceVerificationRequestKey",
          "eventType"
        ],
        "type": "object",
        "properties": {
          "deviceVerificationRequestKey": {
            "type": "integer",
            "description": "DeviceVerificationRequestKey",
            "format": "int64"
          },
          "eventType": {
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "Event Type",
            "format": "int32"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "AccountIdentifier"
          },
          "userIdentifier": {
            "type": "string",
            "description": "UserIdentifier"
          },
          "transferIdentifier": {
            "type": "string",
            "description": "TransferIdentifier"
          }
        }
      },
      "UpdateVerificationResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateDisbursementBankCardRequest": {
        "type": "object",
        "properties": {
          "encryptedBankCard": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "CreateBankCardResponse": {
        "type": "object",
        "properties": {
          "bankcard": {
            "$ref": "#/components/schemas/DisbursementLink"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DisbursementLink": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fundsAvailability": {
            "type": "string"
          },
          "cardAssociationType": {
            "type": "string"
          }
        }
      },
      "CreateDisbursementCashRequest": {
        "type": "object",
        "properties": {
          "encryptedCash": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "CreateDisbursementCashResponse": {
        "type": "object",
        "properties": {
          "cash": {
            "$ref": "#/components/schemas/DisbursementLink"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateDisbursementAchRequest": {
        "type": "object",
        "properties": {
          "encryptedAch": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "CreateDisbursementAchResponse": {
        "type": "object",
        "properties": {
          "ach": {
            "$ref": "#/components/schemas/DisbursementLink"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetTransferStatusResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/DisbursementTransactionDetail"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DisbursementTransactionDetail": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "TransferId"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "statusReason": {
            "type": "string",
            "description": "Reason Status"
          },
          "claimCode": {
            "type": "string",
            "description": "ClaimCode"
          },
          "claimCodeExpirationDate": {
            "type": "string",
            "description": "ClaimExpirationDate"
          },
          "originalTransactionCode": {
            "type": "integer",
            "description": "originalTransactionCode",
            "format": "int32"
          },
          "originalTransactionCodeDescription": {
            "type": "string",
            "description": "originalTransactionCodeDescription"
          },
          "originalTransactionSubCode": {
            "type": "integer",
            "description": "originalTransactionSubCode",
            "format": "int32"
          },
          "source": {
            "$ref": "#/components/schemas/DisbursementTransferEntity"
          },
          "destination": {
            "$ref": "#/components/schemas/DisbursementTransferEntity"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringKeyValuePair"
            },
            "description": "Options"
          },
          "amount": {
            "type": "number",
            "description": "Transaction Amount",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Transaction Currency"
          },
          "description": {
            "type": "string",
            "description": "Transaction Description"
          },
          "transactionDate": {
            "type": "string",
            "description": "TransactionDate"
          },
          "externalReferenceId": {
            "type": "string",
            "description": "ExternalReferenceId"
          }
        }
      },
      "DisbursementTransferEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "id": {
            "type": "string",
            "description": "Link Id"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringKeyValuePair"
            },
            "description": "EntityDetails"
          }
        }
      },
      "StringKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key"
          },
          "value": {
            "type": "string",
            "description": "Value"
          }
        },
        "description": "StringKeyValuePair"
      },
      "CreateTransferRequest": {
        "type": "object",
        "properties": {
          "sourceUri": {
            "type": "string"
          },
          "destinationUri": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          }
        }
      },
      "CreateTransferResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/TransactionOutput"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "TransactionOutput": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "claimCode": {
            "type": "string"
          },
          "claimExpirationDate": {
            "type": "string"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "allowedAmount": {
            "type": "string"
          },
          "fundsAvailability": {
            "type": "string"
          },
          "externalReferenceId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Fees": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "number",
            "description": "Fee Amount",
            "format": "double"
          },
          "feeType": {
            "type": "string",
            "description": "Fee Type"
          }
        }
      },
      "DisbursementUpdateTransferRequest": {
        "type": "object",
        "properties": {
          "transactionActionType": {
            "type": "string",
            "description": "TransactionActionType"
          }
        },
        "description": "DisbursementUpdateTransferRequest"
      },
      "DisbursementUpdateTransferResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/TransactionOutput"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetTokenizedUrlRequest": {
        "type": "object",
        "properties": {
          "caseType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "GetTokenizedUrlResponse": {
        "type": "object",
        "properties": {
          "disputeUrl": {
            "type": "string"
          },
          "customerData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateDisputeTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetECashPartnersResponse": {
        "type": "object",
        "properties": {
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partner"
            },
            "description": "Partners"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "GetECashPartnersResponse"
      },
      "Partner": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "partnerName": {
            "type": "string"
          },
          "faceFee": {
            "type": "string"
          }
        }
      },
      "GetBarcodesResponse": {
        "type": "object",
        "properties": {
          "eCash": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarcodeDetails"
            },
            "description": "Barcodes"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Gd.Bos.DataTransfer.Response.GetBarcodesResponse"
      },
      "BarcodeDetails": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string",
            "description": "PartnerId"
          },
          "partnerName": {
            "type": "string",
            "description": "PartnerName"
          },
          "programCode": {
            "type": "string",
            "description": "ProgramCode"
          },
          "productCode": {
            "type": "string",
            "description": "ProductCode"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "AccountIdentifier"
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "format": "double"
          },
          "recipient": {
            "$ref": "#/components/schemas/Recipient"
          },
          "memo": {
            "type": "string",
            "description": "Memo"
          },
          "transactionType": {
            "enum": [
              "none",
              "send",
              "load"
            ],
            "type": "string",
            "description": "TransactionType"
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode"
          },
          "barcodeStatus": {
            "enum": [
              "none",
              "new",
              "pending",
              "consumed",
              "voided",
              "expired",
              "cancelled",
              "declined"
            ],
            "type": "string",
            "description": "BarcodeStatus"
          },
          "barcodeNumber": {
            "type": "string",
            "description": "BarcodeNumber"
          },
          "barcodeHumanReadable": {
            "type": "string",
            "description": "BarcodeHumanReadable"
          },
          "barcodeExpirationDateTime": {
            "type": "string",
            "description": "BarcodeExpirationDateTime",
            "format": "date-time"
          },
          "faceFee": {
            "type": "number",
            "description": "FaceFee",
            "format": "double"
          }
        },
        "description": "BarcodeDetails"
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "phonenumber": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          }
        }
      },
      "GenerateBarcodeRequest": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "zipCode": {
            "type": "string"
          },
          "transactionType": {
            "enum": [
              "none",
              "send",
              "load"
            ],
            "type": "string"
          },
          "recipient": {
            "$ref": "#/components/schemas/Recipient"
          },
          "memo": {
            "type": "string"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/GeoLocation"
          }
        }
      },
      "GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GenerateBarcodeResponse": {
        "type": "object",
        "properties": {
          "eCash": {
            "$ref": "#/components/schemas/Barcode"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "GenerateBarcodeResponse"
      },
      "Barcode": {
        "type": "object",
        "properties": {
          "barcodeStatus": {
            "enum": [
              "none",
              "new",
              "pending",
              "consumed",
              "voided",
              "expired",
              "cancelled",
              "declined"
            ],
            "type": "string",
            "description": "BarcodeStatus"
          },
          "barcodeNumber": {
            "type": "string",
            "description": "BarcodeNumber"
          },
          "barcodeHumanReadable": {
            "type": "string",
            "description": "BarcodeHumanReadable"
          },
          "barcodeExpirationDateTime": {
            "type": "string",
            "description": "BarcodeExpirationDateTime",
            "format": "date-time"
          },
          "faceFee": {
            "type": "number",
            "description": "FaceFee",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "format": "double"
          }
        },
        "description": "Barcode"
      },
      "EGiftCatalogResponse": {
        "type": "object",
        "properties": {
          "catalogItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EGiftCatalogItem"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "EGiftCatalogResponse: Response to get egift catalog request"
      },
      "EGiftCatalogItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "universalproductcode": {
            "type": "string"
          },
          "productConfigurationId": {
            "type": "string"
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productDescription": {
            "type": "string"
          },
          "frontImage": {
            "type": "string"
          },
          "imageSize": {
            "type": "string"
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "rewardPercentage": {
            "type": "number",
            "format": "double"
          },
          "productName": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "activationCharacteristics": {
            "$ref": "#/components/schemas/DollarValue"
          },
          "termsAndConditions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "netgreendotcommision": {
            "type": "number",
            "format": "double"
          },
          "productpairingkey": {
            "type": "string"
          },
          "productpairorderingkey": {
            "type": "string"
          },
          "producttype": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32"
          },
          "productmiscdetails": {
            "type": "string"
          },
          "createdate": {
            "type": "string",
            "format": "date-time"
          },
          "changedate": {
            "type": "string",
            "format": "date-time"
          },
          "doubleCBPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Section": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "DollarValue": {
        "type": "object",
        "properties": {
          "isVariableValue": {
            "type": "boolean"
          },
          "rangeValues": {
            "$ref": "#/components/schemas/RangeValues"
          },
          "fixedValues": {
            "$ref": "#/components/schemas/FixedValues"
          }
        }
      },
      "RangeValues": {
        "type": "object",
        "properties": {
          "baseValueAmount": {
            "type": "number",
            "format": "double"
          },
          "maxValueAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "FixedValues": {
        "type": "object",
        "properties": {
          "amounts": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "EGiftPurchaseRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "productId": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "purchaseType": {
            "type": "string"
          },
          "targetEndpoint": {
            "$ref": "#/components/schemas/EGiftEndpoint"
          },
          "purchaseFeature": {
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "EGiftPurchaseRequest"
      },
      "EGiftEndpoint": {
        "type": "object",
        "properties": {
          "endpointType": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "EGiftPurchaseResponse": {
        "type": "object",
        "properties": {
          "eGift": {
            "$ref": "#/components/schemas/GiftCard"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GiftCard": {
        "type": "object",
        "properties": {
          "eGiftId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "pin": {
            "type": "string"
          },
          "barcode3rdLineData": {
            "type": "string"
          },
          "barcodeType": {
            "type": "string"
          },
          "barcodeCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarcodeCharacteristics"
            }
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "balanceAsOfDate": {
            "type": "string",
            "format": "date-time"
          },
          "numberOfTimesBalanceChecked": {
            "type": "integer",
            "format": "int32"
          },
          "cardImage": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "maxBalanceCheckAllowed": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseAmount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "boolean"
          },
          "productType": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BarcodeCharacteristics": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "barCodeFormat": {
            "type": "string"
          },
          "barcodeType": {
            "type": "string"
          },
          "barcodeSubtype": {
            "type": "string"
          }
        }
      },
      "EGiftWalletResponse": {
        "type": "object",
        "properties": {
          "eGifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletGiftCard"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "WalletGiftCard": {
        "type": "object",
        "properties": {
          "eGiftId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "pin": {
            "type": "string"
          },
          "barcode3rdLineData": {
            "type": "string"
          },
          "barcodeType": {
            "type": "string"
          },
          "barcodeCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarcodeCharacteristics"
            }
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "balanceAsOfDate": {
            "type": "string",
            "format": "date-time"
          },
          "numberOfTimesBalanceChecked": {
            "type": "integer",
            "format": "int32"
          },
          "cardImage": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "maxBalanceCheckAllowed": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseAmount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "boolean"
          },
          "productType": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EGiftResponse": {
        "type": "object",
        "properties": {
          "eGift": {
            "$ref": "#/components/schemas/GiftCard"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EGiftDeleteResponse": {
        "type": "object",
        "properties": {
          "eGift": {
            "$ref": "#/components/schemas/GiftCard"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EGiftBalanceResponse": {
        "type": "object",
        "properties": {
          "eGift": {
            "$ref": "#/components/schemas/GiftCard"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EGiftUpdateBalanceRequest": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EGiftUpdateBalanceResponse": {
        "type": "object",
        "properties": {
          "eGift": {
            "$ref": "#/components/schemas/GiftCard"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EGiftGetLifeTimeRewardsResponse": {
        "type": "object",
        "properties": {
          "totalRewardsEarned": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SamplesEnrollmentRequest": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "prospectIdentifier": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/SamplesAccount"
          },
          "upgradeToEMV": {
            "type": "boolean"
          },
          "contactVerificationIdentifier": {
            "type": "string"
          }
        }
      },
      "SamplesAccount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "SamplesEnrollmentResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolder"
            }
          },
          "accountCycleDay": {
            "type": "integer",
            "format": "int32"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "activationStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EnrollmentRequest": {
        "type": "object",
        "properties": {
          "contactVerificationIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "$ref": "#/components/schemas/EncryptedUser"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "requestPhysicalCardFlag": {
            "type": "boolean"
          },
          "encryptedPin": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "executeKycFlag": {
            "type": "boolean"
          },
          "encryptedFraudData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "EnrollmentResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Enrollment"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SccEnrollRequest": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "scc": {
            "$ref": "#/components/schemas/SccCreationData"
          }
        }
      },
      "SccCreationData": {
        "type": "object",
        "properties": {
          "income": {
            "type": "number",
            "format": "double"
          },
          "incomeFrequency": {
            "type": "string"
          },
          "expense": {
            "type": "number",
            "format": "double"
          },
          "expenseFrequency": {
            "type": "string"
          },
          "ddaAccountIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SccEnrollResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/SccEnrollment"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SccEnrollment": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolder"
            }
          },
          "creditLineRange": {
            "$ref": "#/components/schemas/CreditLineRange"
          }
        }
      },
      "CreditLineRange": {
        "type": "object",
        "properties": {
          "minCreditLine": {
            "type": "integer",
            "format": "int32"
          },
          "maxCreditLine": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RetailCardEnrollmentRequest": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "retailCardIdentifier": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/RetailAccount"
          },
          "contactVerificationIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RetailAccount": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "termsAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsAcceptance"
            }
          }
        }
      },
      "RetailCardEnrollmentResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "accountReferenceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountStatusChangedDateTime": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCure": {
            "type": "string"
          },
          "directDepositInformation": {
            "$ref": "#/components/schemas/DirectDepositInformation"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolder"
            }
          },
          "accountCycleDay": {
            "type": "integer",
            "format": "int32"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "activationStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "RetailCardEnrollmentRecoverRequest": {
        "required": [
          "accountIdentifier"
        ],
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "PutEnrollmentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/EncryptedUser"
          }
        }
      },
      "PutEnrollmentResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "kycStateData": {
            "$ref": "#/components/schemas/KycStateData"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetEnrollmentResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "TestEventWebHookSetConfigRequest": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "integer",
            "description": "Minimum amount of time for delay (Value of 0 means no delay)",
            "format": "int32"
          },
          "maximum": {
            "type": "integer",
            "description": "Maximum amount of time for delay (Value of 0 means no delay)",
            "format": "int32"
          },
          "responseHttpStatusCode": {
            "enum": [
              100,
              101,
              102,
              103,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              226,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              421,
              422,
              423,
              424,
              426,
              428,
              429,
              431,
              451,
              500,
              501,
              502,
              503,
              504,
              505,
              506,
              507,
              508,
              510,
              511
            ],
            "type": "integer",
            "description": "Http Status Code which should be returned for future webhook responses",
            "format": "int32"
          },
          "responseBody": {
            "type": "string",
            "description": "   Http response body that should be returned when <see cref=\"P:Gd.Bos.DataTransfer.Request.TestEventWebHookSetConfigRequest.ResponseHttpStatusCode\">ResponseHttpStatusCode</see> has been\r\nprovided"
          },
          "responseContentType": {
            "type": "string",
            "description": "Content type to return together with <see cref=\"P:Gd.Bos.DataTransfer.Request.TestEventWebHookSetConfigRequest.ResponseHttpStatusCode\">ResponseHttpStatusCode</see>"
          }
        },
        "description": "TestEventWebHookSetConfigRequestValidator"
      },
      "ResponseBase": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Base response header required in all responses"
      },
      "EventWebHookPocResponse": {
        "type": "object",
        "properties": {
          "clientResponse": {
            "type": "string",
            "description": "Status of the remote party's acceptance of the request"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "EventInformation": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/EventAccount"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessEvent"
            }
          }
        }
      },
      "EventAccount": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string",
            "description": "AccountIdentifier",
            "format": "uuid"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            },
            "description": "Purses"
          }
        },
        "description": "EventAccount"
      },
      "BusinessEvent": {
        "type": "object",
        "properties": {
          "eventIdentifier": {
            "type": "string",
            "description": "EventIdentifier",
            "format": "uuid"
          },
          "eventType": {
            "type": "string",
            "description": "EventType"
          },
          "eventStatus": {
            "type": "string",
            "description": "EventStatus"
          },
          "eventDateTime": {
            "type": "string",
            "description": "EventDateTime",
            "format": "date-time"
          },
          "deliveredDateTime": {
            "type": "string",
            "description": "DeliveredDateTime",
            "format": "date-time"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "description": "Transactions"
          },
          "encryptedTransactions": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "description": "BusinessEvent"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "transactionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "transactionType": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "bin": {
            "type": "string"
          },
          "last4Pan": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "postedDateTime": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "totalFeesAmount": {
            "type": "number",
            "format": "double"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fee"
            }
          },
          "isCredit": {
            "type": "boolean"
          },
          "networkTransactionData": {
            "$ref": "#/components/schemas/NetworkTransactionData"
          },
          "postedInternalTransactionData": {
            "$ref": "#/components/schemas/PostedInternalTransactionData"
          }
        }
      },
      "Fee": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "feeType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "localizedDisplayName": {
            "type": "string"
          }
        }
      },
      "NetworkTransactionData": {
        "type": "object",
        "properties": {
          "authorizationDateTime": {
            "type": "string"
          },
          "cashBackAmount": {
            "type": "number",
            "format": "double"
          },
          "localTransactionData": {
            "$ref": "#/components/schemas/LocalTransactionData"
          },
          "cardAcceptor": {
            "$ref": "#/components/schemas/CardAcceptor"
          },
          "merchantCategory": {
            "type": "string"
          },
          "merchantCategoryCode": {
            "type": "string"
          },
          "networkName": {
            "type": "string"
          },
          "authorizedTransactionData": {
            "$ref": "#/components/schemas/AuthorizedTransactionData"
          }
        }
      },
      "PostedInternalTransactionData": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "adjustmentIdentifier": {
            "type": "string"
          },
          "achCategoryCode": {
            "type": "string"
          },
          "adjustmentType": {
            "type": "string"
          },
          "transactionDescriptionData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "bankData": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "retailSaleData": {
            "$ref": "#/components/schemas/RetailSaleData"
          },
          "transferType": {
            "enum": [
              "none",
              "disbursementIn",
              "disbursementOut",
              "achOut",
              "purseTransfer",
              "swipeReload",
              "adjustment",
              "achPull",
              "peerTransfer",
              "mrdc",
              "eCashLoad",
              "billPay",
              "eCashSend",
              "eGiftPurchase",
              "iftSend",
              "iftLoad",
              "iftOut",
              "wireOut",
              "sCCPayment",
              "sCCFunding",
              "creditLineIncrease",
              "creditLineDecrease",
              "sccOverCreditLimit",
              "sccWriteOffFullBalance",
              "sccWriteOffPartialBalance",
              "sccWriteOffNegativeBalance",
              "sccPaymentByAchPull",
              "cblPayment",
              "cblRefund"
            ],
            "type": "string"
          },
          "partnerAdjustmentType": {
            "type": "string"
          }
        }
      },
      "LocalTransactionData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "CardAcceptor": {
        "type": "object",
        "properties": {
          "merchantName": {
            "type": "string"
          },
          "merchantIndustryCode": {
            "type": "string"
          },
          "merchantIndustryCategory": {
            "type": "string"
          },
          "merchantIndustryDescription": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "stateProvReg": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "AuthorizedTransactionData": {
        "type": "object",
        "properties": {
          "authStatusIndicator": {
            "type": "string"
          },
          "authorizationResponseCode": {
            "type": "string"
          },
          "holdExpirationDate": {
            "type": "string"
          },
          "declineReason": {
            "type": "string"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string",
            "description": "Required : External bank routing number"
          },
          "accountNumber": {
            "type": "string",
            "description": "Required : External bank account number"
          },
          "bankName": {
            "type": "string",
            "description": "Optional : External bank name"
          },
          "firstName": {
            "type": "string",
            "description": "Optional : Customer first name"
          },
          "lastName": {
            "type": "string",
            "description": "Optional : Customer last name"
          },
          "accountType": {
            "type": "string",
            "description": "Optional : External bank account type - checking, saving"
          },
          "businessName": {
            "type": "string",
            "description": "Optional : Business name"
          }
        },
        "description": "Container for bank account details"
      },
      "RetailSaleData": {
        "type": "object",
        "properties": {
          "merchantName": {
            "type": "string"
          },
          "storeNumber": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "ExperianUpdateOptInRequest": {
        "required": [
          "optIn"
        ],
        "type": "object",
        "properties": {
          "optIn": {
            "type": "boolean"
          }
        }
      },
      "ExperianUpdateOptInResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetExperianOptInResponse": {
        "type": "object",
        "properties": {
          "optIn": {
            "type": "boolean"
          },
          "boost": {
            "type": "boolean"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ExperianCreateAuthorizeExtendRequest": {
        "type": "object",
        "properties": {
          "authorization_Gss": {
            "type": "string",
            "description": ""
          },
          "redirect_uri": {
            "type": "string",
            "description": ""
          },
          "response_type": {
            "type": "string",
            "description": ""
          },
          "audience": {
            "type": "string",
            "description": ""
          },
          "resource": {
            "type": "string",
            "description": ""
          },
          "subject": {
            "type": "string",
            "description": ""
          },
          "brand": {
            "type": "string",
            "description": ""
          },
          "scope": {
            "type": "string",
            "description": ""
          },
          "state": {
            "type": "string",
            "description": ""
          }
        },
        "description": "ExperianCreateAuthorizeExtendRequest"
      },
      "ExperianCreateAuthorizeExtendResponse": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetExperianRedirectUrlResponse": {
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AddExternalCardRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "encryptedExternalCardData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "AddExternalCardResponse": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "fundingEligible": {
            "type": "boolean"
          },
          "withdrawalEligible": {
            "type": "boolean"
          },
          "accountExternalCardIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetFeeWaiversRequest": {
        "required": [
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "GetFeeWaiversResponse": {
        "type": "object",
        "properties": {
          "waivedFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaivedFee"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "WaivedFee": {
        "type": "object",
        "properties": {
          "feeAmountWaived": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "dateWaived": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          }
        }
      },
      "CreateGuestVerificationRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          },
          "user": {
            "$ref": "#/components/schemas/EncryptedUser"
          }
        }
      },
      "DeviceInfo": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "deviceMake": {
            "type": "string"
          },
          "deviceVersion": {
            "type": "string"
          },
          "deviceOS": {
            "type": "string"
          },
          "deviceOSVersion": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "customerIP": {
            "type": "string"
          }
        }
      },
      "CreateGuestVerificationResponse": {
        "type": "object",
        "properties": {
          "guestVerificationStatus": {
            "$ref": "#/components/schemas/GuestVerificationStatus"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GuestVerificationStatus": {
        "type": "object",
        "properties": {
          "ofacStatus": {
            "type": "string"
          },
          "verificationStatus": {
            "type": "string"
          }
        }
      },
      "HealthCheckResponse": {
        "type": "object",
        "properties": {
          "healthCheck": {
            "$ref": "#/components/schemas/HealthCheck"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response container for details responding to a health check request"
      },
      "HealthCheck": {
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string",
            "description": "ServiceName"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "totalTime": {
            "type": "string",
            "description": "TotalTime"
          },
          "waitTime": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "WaitTime"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthCheck"
            },
            "description": "Dependencies"
          }
        },
        "description": "Container for health check details"
      },
      "GetPurseInterestRateTiersResponse": {
        "type": "object",
        "properties": {
          "purseInterestRateTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurseInterestRateTier"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "PurseInterestRateTier": {
        "type": "object",
        "properties": {
          "purseIdentifier": {
            "type": "string"
          },
          "purseType": {
            "enum": [
              "primary",
              "savings",
              "holding",
              "multran",
              "loan"
            ],
            "type": "string"
          },
          "interestRateTierIdentifier": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "interestYieldEndDate": {
            "type": "string"
          },
          "APY": {
            "type": "number",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AddInterestRateTierRequest": {
        "required": [
          "interestRateTier"
        ],
        "type": "object",
        "properties": {
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "autoAlignStartDate": {
            "type": "boolean"
          }
        }
      },
      "AddInterestRateTierResponse": {
        "type": "object",
        "properties": {
          "interestRateTierIdentifier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "apy": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateInterestRateTierRequest": {
        "type": "object",
        "properties": {
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldEndDate": {
            "type": "string"
          },
          "removeInterestYieldEndDate": {
            "type": "boolean"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "autoAlignStartDate": {
            "type": "boolean"
          }
        }
      },
      "UpdateInterestRateTierResponse": {
        "type": "object",
        "properties": {
          "interestRateTierIdentifier": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "interestYieldEndDate": {
            "type": "string"
          },
          "apy": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DeleteInterestRateTierResponse": {
        "type": "object",
        "properties": {
          "interestRateTierIdentifier": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "interestYieldEndDate": {
            "type": "string"
          },
          "apy": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateKyc1Request": {
        "type": "object",
        "properties": {
          "ssnSuffix": {
            "type": "string"
          },
          "encryptedSsnSuffix": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "CreateKyc1Response": {
        "type": "object",
        "properties": {
          "kycGate": {
            "$ref": "#/components/schemas/CreateKyc1"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateKyc1": {
        "type": "object",
        "properties": {
          "pendingKycGate": {
            "type": "string"
          },
          "kycGateStatus": {
            "type": "string"
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateIDVRequest": {
        "type": "object",
        "properties": {
          "idvRequestType": {
            "type": "string"
          },
          "encryptedIdentityDocumentation": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "description": "Request object"
      },
      "CreateIDVResponse": {
        "type": "object",
        "properties": {
          "kycGate": {
            "$ref": "#/components/schemas/CreateIdv"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateIdv": {
        "type": "object",
        "properties": {
          "kycStateData": {
            "$ref": "#/components/schemas/KycStateData"
          }
        }
      },
      "GetKycResponse": {
        "type": "object",
        "properties": {
          "kycGate": {
            "type": "string"
          },
          "kycGateAttemptsRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "kycGateStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateKyc2Request": {
        "type": "object",
        "properties": {
          "ssn": {
            "type": "string"
          },
          "encryptedSsn": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "CreateKyc2Response": {
        "type": "object",
        "properties": {
          "kycGate": {
            "$ref": "#/components/schemas/CreateKyc2"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateKyc2": {
        "type": "object",
        "properties": {
          "pendingKycGate": {
            "type": "string"
          },
          "kycGateAttemptsRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "kycGateStatus": {
            "type": "string"
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identityChallenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityChallenge"
            }
          },
          "encryptedIdentityChallenges": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "IdentityChallenge": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "format": "int32"
          },
          "questionText": {
            "type": "string"
          },
          "identityChallengeAnswerChoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityChallengeAnswerChoice"
            }
          }
        }
      },
      "IdentityChallengeAnswerChoice": {
        "type": "object",
        "properties": {
          "answerId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "CreateOOWRequest": {
        "type": "object",
        "properties": {
          "identityChallengeAnswerSelections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityChallengeAnswerSelection"
            }
          }
        }
      },
      "IdentityChallengeAnswerSelection": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "format": "int32"
          },
          "answerId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateScanCaptureRequest": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "encryptedIdentityDocumentation": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        },
        "description": "Request object"
      },
      "CreateScanCaptureResponse": {
        "type": "object",
        "properties": {
          "documentData": {
            "$ref": "#/components/schemas/DocumentData"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DocumentData": {
        "type": "object",
        "properties": {
          "encryptedIdentityData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "onboardingID": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "templateType": {
            "type": "string"
          }
        }
      },
      "GetAtmLocationsResponse": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtmLocation"
            }
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AtmLocation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GetRetailLocationsResponse": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailLocation"
            },
            "description": "Locations"
          },
          "totalRecordCount": {
            "type": "integer",
            "description": "Total Record Count",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Page Number",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Page Size",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "RetailLocation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "distance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateNotificationEnrollmentRequest": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "enrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationEnrollment"
            }
          }
        }
      },
      "NotificationEnrollment": {
        "type": "object",
        "properties": {
          "notificationTypeKey": {
            "type": "integer",
            "format": "int32"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationEnrollmentContact"
            }
          },
          "enrollmentRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationEnrollmentRule"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "frequency": {
            "type": "string"
          }
        },
        "description": "NotificationEnrollment"
      },
      "NotificationEnrollmentContact": {
        "type": "object",
        "properties": {
          "channelType": {
            "type": "string"
          },
          "contactValue": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "NotificationEnrollmentRule": {
        "type": "object",
        "properties": {
          "attributeKey": {
            "type": "integer",
            "format": "int32"
          },
          "attributeValue": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateNotificationEnrollmentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetNotificationEnrollmentResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "enrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationEnrollment"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetInboxMessageResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "inboxMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InboxMessage"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "InboxMessage": {
        "type": "object",
        "properties": {
          "messageKey": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "notificationTypeKey": {
            "type": "integer",
            "format": "int32"
          },
          "categoryKey": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "enum": [
              "alerts",
              "email",
              "link"
            ],
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "MarkMessageAsReadRequest": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadMessage"
            }
          }
        }
      },
      "ReadMessage": {
        "type": "object",
        "properties": {
          "messageKey": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MarkMessageAsReadResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetInboxMessageCountResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "StopPaperCheckPaymentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "checkNumber": {
            "type": "string"
          },
          "checkInventoryStatus": {
            "type": "string"
          }
        }
      },
      "StopPaperCheckPaymentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CheckBookOrderRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "orderConfirmationToken ": {
            "type": "string"
          },
          "checkBookOrderStatus ": {
            "type": "string"
          }
        }
      },
      "CheckBookOrderResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCheckBookOrdersResponse": {
        "type": "object",
        "properties": {
          "checkBookOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckBookOrder"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CheckBookOrder": {
        "type": "object",
        "properties": {
          "orderConfirmationToken": {
            "type": "string"
          },
          "checkBookOrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkBookOrderStatus": {
            "type": "string"
          },
          "firstCheckNumber": {
            "type": "string"
          },
          "lastCheckNumber": {
            "type": "string"
          }
        }
      },
      "GetSccPaymentResponse": {
        "type": "object",
        "properties": {
          "lastStatementBalance": {
            "type": "number",
            "format": "double"
          },
          "remainingBalanceDue": {
            "type": "number",
            "format": "double"
          },
          "remainingMinimumDue": {
            "type": "number",
            "format": "double"
          },
          "paymentDueDate": {
            "type": "string"
          },
          "lastStatementDate": {
            "type": "string"
          },
          "daysDelinquent": {
            "type": "string"
          },
          "lastCalculatedMinimumPayment": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetPaymentInstrumentResponse": {
        "type": "object",
        "properties": {
          "paymentInstrument": {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SetPinRequest": {
        "type": "object",
        "properties": {
          "encryptedPin": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "SetPinResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetPaymentInstrumentListResponse": {
        "type": "object",
        "properties": {
          "paymentInstruments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInstrumentLight"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "PaymentInstrumentLight": {
        "type": "object",
        "properties": {
          "userIdentifier": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "paymentInstrumentType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReasons": {
            "type": "array",
            "items": {
              "enum": [
                "damaged",
                "neverReceived",
                "returnedMail",
                "expired",
                "unusedCard",
                "lostStolen",
                "upgraded",
                "nameChange",
                "suspiciousActivity",
                "massCompromised",
                "lost",
                "stolen",
                "unauthorizedUse",
                "compromised",
                "accountBlocked",
                "customerInitiatedHold"
              ],
              "type": "string"
            }
          },
          "isPrimaryAccountHolder": {
            "type": "boolean"
          },
          "isPrivateDataViewable": {
            "type": "boolean"
          },
          "isPinSet": {
            "type": "boolean"
          },
          "last4Pan": {
            "type": "string"
          },
          "activatedDateTime": {
            "type": "string"
          },
          "issuedDateTime": {
            "type": "string"
          },
          "customCardImageIdentifier": {
            "type": "string"
          }
        }
      },
      "CompleteRegistrationRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "productMaterialType": {
            "type": "string"
          },
          "requestPhysicalCardFlag": {
            "type": "boolean"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CompleteRegistrationResponse": {
        "type": "object",
        "properties": {
          "paymentInstrument": {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ValidateCardRequest": {
        "type": "object",
        "properties": {
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "encryptedPrivatePaymentInstrumentData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "last4Ssn": {
            "type": "string"
          }
        }
      },
      "ValidateCardResponse": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "activationStatus": {
            "type": "string"
          },
          "identityTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityTypes"
            }
          },
          "isDOBMatched": {
            "type": "boolean"
          },
          "isDOBVerified": {
            "type": "boolean"
          },
          "isProspect": {
            "type": "boolean"
          },
          "prospectType": {
            "type": "string"
          },
          "prospectIdentifier": {
            "type": "string"
          },
          "prospectStatus": {
            "type": "integer",
            "format": "int32"
          },
          "retailCardIdentifier": {
            "type": "string"
          },
          "isRetailCard": {
            "type": "boolean"
          },
          "retailCardStatus": {
            "type": "integer",
            "format": "int32"
          },
          "productCode": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "IdentityTypes": {
        "type": "object",
        "properties": {
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "identityType": {
            "enum": [
              "sSN",
              "drivingLicense",
              "passport",
              "matriculaId",
              "iTIN",
              "eIN"
            ],
            "type": "string"
          }
        }
      },
      "ActivateCardRequest": {
        "type": "object",
        "properties": {
          "encryptedPrivatePaymentInstrumentData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "encryptedIdentifyingData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "last4Ssn": {
            "type": "string"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          }
        }
      },
      "ActivateCardResponse": {
        "type": "object",
        "properties": {
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "activationStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ActivateCardWithIdentifierRequest": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          }
        }
      },
      "UpdatePaymentInstrumentRequest": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "paymentInstrumentIdentifier": {
            "type": "string"
          },
          "lifeCycleEventType": {
            "type": "string"
          },
          "replaceReason": {
            "type": "string"
          },
          "dateLastUsed": {
            "type": "string"
          },
          "dateDiscoveredMissing": {
            "type": "string"
          },
          "policeNotified": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          },
          "productMaterialType": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "customCardImageIdentifier": {
            "type": "string"
          },
          "waiveFee": {
            "type": "boolean"
          },
          "waiveOvernightFee": {
            "type": "boolean"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "UpdatePaymentInstrumentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "TrackMyMailResponse": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "type": "string"
          },
          "deliveryMethodCode": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "deliveryStatusCode": {
            "type": "string"
          },
          "deliveryStatus": {
            "type": "string"
          },
          "shippedDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedArrivalDate": {
            "type": "string",
            "format": "date-time"
          },
          "last4Pan": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "cardHolderName": {
            "type": "string"
          },
          "productMaterialType": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ReplaceCardEligibilityResponse": {
        "type": "object",
        "properties": {
          "replacementOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplaceCardOption"
            }
          },
          "replacementDeliveryOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplaceCardDeliveryOption"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ReplaceCardOption": {
        "type": "object",
        "properties": {
          "replaceReason": {
            "type": "string"
          },
          "isEligible": {
            "type": "boolean"
          }
        }
      },
      "ReplaceCardDeliveryOption": {
        "type": "object",
        "properties": {
          "deliveryMethod": {
            "type": "string"
          },
          "isEligible": {
            "type": "boolean"
          }
        }
      },
      "GetPushProvisionConfigListResponse": {
        "type": "object",
        "properties": {
          "provisionConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisionConfig"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ProvisionConfig": {
        "type": "object",
        "properties": {
          "walletProvider": {
            "enum": [
              "apple",
              "google",
              "samsung"
            ],
            "type": "string",
            "description": "Provider of wallet for provisioning."
          },
          "tokenServiceProviderEncryptionVersion": {
            "type": "string",
            "description": "Reference to internal encryption version to be used when create push provisioning data is called with associated walletProvider."
          },
          "paymentNetworkOperator": {
            "type": "string",
            "description": "Identifier for payment network operator (Visa/MasterCard/Discover/QUICPay)"
          }
        },
        "description": "Container for data related to push provisioning config"
      },
      "GetPaymentInstrumentTokenListResponse": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInstrumentToken"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "PaymentInstrumentToken": {
        "type": "object",
        "properties": {
          "paymentIdentifier": {
            "type": "string",
            "description": "Unique identifier of a card number"
          },
          "deviceId": {
            "type": "string",
            "description": "Device Id"
          },
          "last4Pan": {
            "type": "string",
            "description": "Last 4 digits of the card number"
          },
          "DPANID": {
            "type": "string",
            "description": "Network proxy representation of a digital card number. Will be unique to a device"
          },
          "FPANID": {
            "type": "string",
            "description": "Network proxy representation of a payment identifier. Will be consistent across devices"
          },
          "PAR": {
            "type": "string",
            "description": "Network proxy representation of an account. Will be consistent across payment identifiers"
          },
          "last4DPAN": {
            "type": "string",
            "description": "Last 4 digits of a digital card number"
          },
          "wallet": {
            "type": "string",
            "description": "Digital wallet the payment identifier is provisioned into"
          },
          "walletType": {
            "type": "string",
            "description": "The type of wallet"
          },
          "status": {
            "type": "string",
            "description": "Status of the digital card number"
          }
        },
        "description": "Container for data related to provisioning token"
      },
      "CreatePushProvisionDataRequest": {
        "type": "object",
        "properties": {
          "walletProvider": {
            "enum": [
              "apple",
              "google",
              "samsung"
            ],
            "type": "string",
            "description": "Provider of wallet for provisioning"
          },
          "deviceData": {
            "$ref": "#/components/schemas/DeviceData"
          }
        },
        "description": "Container for push provision data request"
      },
      "DeviceData": {
        "type": "object",
        "properties": {
          "nonce": {
            "type": "string",
            "description": "Hex Encoded Unique value generated by device to mark request as unique"
          },
          "nonceSignature": {
            "type": "string",
            "description": "Hex Encoded Signature generated by device secure element over the nonce field to prevent data tampering"
          },
          "publicCertData": {
            "type": "string",
            "description": "Hex encoded public certificate for which provisioning response data should be encrypted"
          },
          "clientDeviceId": {
            "type": "string",
            "description": "Stable hardware identifier obtained from device"
          },
          "clientWalletId": {
            "type": "string",
            "description": "Provider assigned identifier for a wallet"
          }
        },
        "description": "Container for device data related to push provisioning request"
      },
      "CreatePushProvisionDataResponse": {
        "type": "object",
        "properties": {
          "activationData": {
            "type": "string",
            "description": "Base 64 encoded provisioning activation data when provisioning request is for Apple"
          },
          "encryptedPaymentData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "opc": {
            "type": "string",
            "description": "Opc when provisioning request is for Google"
          },
          "displayName": {
            "type": "string",
            "description": "Description of associated product"
          },
          "paymentNetworkOperator": {
            "type": "string",
            "description": "Identifier for payment network operator (Visa/MasterCard/Discover/QUICPay)"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "last4Pan": {
            "type": "string",
            "description": "Last four digits of the payment card"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Container for response data from creating push provision data"
      },
      "CreateAccountPointEventRequest": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "CreateAccountPointEventResponse": {
        "type": "object",
        "properties": {
          "eventIdentifier": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetAccountPointsResponse": {
        "type": "object",
        "properties": {
          "points": {
            "$ref": "#/components/schemas/ChallengePoints"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ChallengePoints": {
        "type": "object",
        "properties": {
          "availablePoints": {
            "type": "integer",
            "format": "int64"
          },
          "cumulativePoints": {
            "type": "integer",
            "format": "int64"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentLevel": {
            "$ref": "#/components/schemas/PointCurrentLevel"
          },
          "nextLevel": {
            "$ref": "#/components/schemas/PointNextLevel"
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MilestoneData"
            }
          }
        }
      },
      "PointCurrentLevel": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "description": "Level Number",
            "format": "int32"
          },
          "levelCode": {
            "type": "string",
            "description": "Level identifier"
          }
        }
      },
      "PointNextLevel": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "description": "Level Number",
            "format": "int32"
          },
          "levelCode": {
            "type": "string",
            "description": "Level Identifier"
          },
          "target": {
            "type": "integer",
            "description": "Total points to reach the next level",
            "format": "int64"
          },
          "completed": {
            "type": "integer",
            "description": "Number of points achieved towards the target",
            "format": "int64"
          }
        }
      },
      "MilestoneData": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string"
          },
          "milestoneGroup": {
            "type": "string"
          },
          "totalEventPoints": {
            "type": "integer",
            "format": "int64"
          },
          "currentLevel": {
            "$ref": "#/components/schemas/PointCurrentLevel"
          },
          "nextLevel": {
            "$ref": "#/components/schemas/PointNextLevelMilestone"
          }
        }
      },
      "PointNextLevelMilestone": {
        "type": "object",
        "properties": {
          "bonusPoints": {
            "type": "integer",
            "description": "Expected bonus points received, when achieved milestone level",
            "format": "int64"
          },
          "level": {
            "type": "integer",
            "description": "Level Number",
            "format": "int32"
          },
          "levelCode": {
            "type": "string",
            "description": "Level Identifier"
          },
          "target": {
            "type": "integer",
            "description": "Total points to reach the next level",
            "format": "int64"
          },
          "completed": {
            "type": "integer",
            "description": "Number of points achieved towards the target",
            "format": "int64"
          }
        }
      },
      "GetAccountChallengesResponse": {
        "type": "object",
        "properties": {
          "challenges": {
            "$ref": "#/components/schemas/Challenges"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Challenges": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "challengeStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeStatus"
            }
          }
        }
      },
      "ChallengeStatus": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string"
          },
          "eventsAchieved": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAchieved": {
            "type": "integer",
            "format": "int64"
          },
          "maxEventAttempt": {
            "type": "integer",
            "format": "int32"
          },
          "eventTierLevel": {
            "type": "string"
          },
          "pointsToBeEarned": {
            "type": "integer",
            "format": "int32"
          },
          "amountToPointScale": {
            "type": "integer",
            "format": "int32"
          },
          "calculatorTimePeriod": {
            "type": "string"
          },
          "ruleStatus": {
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetProductFeatureLimitsResponse": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureLimit"
            },
            "description": "FeatureLimits"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Feature Limits"
      },
      "FeatureLimit": {
        "type": "object",
        "properties": {
          "limitType": {
            "type": "string",
            "description": "LimitType"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency"
          },
          "minAmount": {
            "type": "string",
            "description": "MinAmount"
          },
          "maxAmount": {
            "type": "string",
            "description": "MaxAmount"
          },
          "countLimit": {
            "type": "string",
            "description": "CountLimit"
          }
        },
        "description": "FeatureLimit"
      },
      "GetProductInterestRateTierResponse": {
        "type": "object",
        "properties": {
          "productInterestRateTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInterestRateTier"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ProductInterestRateTier": {
        "type": "object",
        "properties": {
          "purseType": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "APY": {
            "type": "number",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreatePurseRequest": {
        "type": "object",
        "properties": {
          "purseType": {
            "type": "string"
          },
          "purseDescription": {
            "type": "string"
          },
          "goalAmount": {
            "type": "number",
            "format": "double"
          },
          "goalDate": {
            "type": "string"
          },
          "iconName": {
            "type": "string"
          },
          "interestRateTier": {
            "type": "string"
          },
          "interestYieldStartDate": {
            "type": "string"
          },
          "autoAlignStartDate": {
            "type": "boolean"
          },
          "purseSubType": {
            "type": "string"
          }
        }
      },
      "CreatePurseResponse": {
        "type": "object",
        "properties": {
          "purse": {
            "$ref": "#/components/schemas/Purse"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetPursesResponse": {
        "type": "object",
        "properties": {
          "purses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Purse"
            }
          },
          "sccBalance": {
            "$ref": "#/components/schemas/SccBalance"
          },
          "purseBalanceTransferStatus": {
            "enum": [
              "undefined",
              "activityNotFound",
              "succeed",
              "inProgress",
              "declined",
              "failed",
              "internalServerError"
            ],
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "SccBalance": {
        "type": "object",
        "properties": {
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "totalCredit": {
            "type": "number",
            "format": "double"
          },
          "postedBalance": {
            "type": "number",
            "format": "double"
          },
          "fundingStatus": {
            "enum": [
              "funded",
              "notFunded"
            ],
            "type": "string"
          }
        }
      },
      "UpdatePurseRequest": {
        "type": "object",
        "properties": {
          "isHidden": {
            "type": "boolean",
            "description": "Ishidden"
          },
          "description": {
            "type": "string",
            "description": "description"
          },
          "iconName": {
            "type": "string",
            "description": "icon name"
          },
          "goalAmount": {
            "type": "string",
            "description": "goal amount"
          },
          "goalDate": {
            "type": "string",
            "description": "goal date"
          },
          "purseSubType": {
            "type": "string",
            "description": "purse sub type"
          }
        },
        "description": "request for updating purse"
      },
      "UpdatePurseResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response after purse is updated"
      },
      "ClosePurseResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Close Purse Response"
      },
      "OptOutByProspectIdRequest": {
        "type": "object",
        "properties": {
          "prospectIdentifier": {
            "type": "string"
          }
        }
      },
      "OptOutByProspectIdResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountMigrationRequest": {
        "type": "object",
        "properties": {
          "prospectIdentifier": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "AccountMigrationResponse": {
        "type": "object",
        "properties": {
          "accountMigrationId": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetProspectDetailsByIdResponse": {
        "type": "object",
        "properties": {
          "prospectDetail": {
            "$ref": "#/components/schemas/ProspectDetail"
          },
          "encryptedPrivateCardData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ProspectDetail": {
        "type": "object",
        "properties": {
          "cardProxy": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "cardStockCode": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "embossedName": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/ProspectAddress"
          },
          "isEmv": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "ssnToken": {
            "type": "string"
          },
          "sampleType": {
            "type": "integer",
            "format": "int32"
          },
          "Last4Ssn": {
            "type": "string"
          },
          "ProspectIdentifier": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "ProspectStatusDescription": {
            "type": "string"
          },
          "OriginalACHReference": {
            "type": "string"
          },
          "OriginalCardReference": {
            "type": "string"
          },
          "OriginalAccountToken": {
            "type": "string"
          }
        }
      },
      "ProspectAddress": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "ZipCode": {
            "type": "string"
          }
        }
      },
      "GetAccountMigrationItemConfirmationResponse": {
        "type": "object",
        "properties": {
          "accountMigration": {
            "$ref": "#/components/schemas/GetAccountMigrationItemConfirmationDTO"
          },
          "encryptedPrivateCardData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetAccountMigrationItemConfirmationDTO": {
        "type": "object",
        "properties": {
          "generationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "confirmationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "creditRatingKey": {
            "type": "string"
          },
          "balanceMigration": {
            "$ref": "#/components/schemas/BalanceMigrationDTO"
          },
          "savingsMigration": {
            "$ref": "#/components/schemas/SavingsMigrationDTO"
          },
          "billCycleMigration": {
            "$ref": "#/components/schemas/BillCycleMigrationDTO"
          },
          "billPayMigration": {
            "$ref": "#/components/schemas/BillPayMigrationDTO"
          }
        }
      },
      "BalanceMigrationDTO": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SavingsMigrationDTO": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BillCycleMigrationDTO": {
        "type": "object",
        "properties": {
          "billCycleDay": {
            "type": "string"
          }
        }
      },
      "BillPayMigrationDTO": {
        "type": "object",
        "properties": {
          "enrollBillPay": {
            "$ref": "#/components/schemas/EnrollBillPay"
          },
          "payeeDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeDetails"
            }
          }
        }
      },
      "EnrollBillPay": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "ssnToken": {
            "type": "string"
          },
          "bankRoutingNumber": {
            "type": "string"
          },
          "bankAccountNumber": {
            "type": "string"
          },
          "bankAccountType": {
            "type": "string"
          },
          "activityStatus": {
            "$ref": "#/components/schemas/ActivityStatus"
          },
          "attemptCount": {
            "$ref": "#/components/schemas/AttemptCount"
          }
        }
      },
      "PayeeDetails": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillPayment"
            }
          },
          "payeeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "zip4": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "index": {
            "type": "string",
            "format": "uuid"
          },
          "activityStatus": {
            "$ref": "#/components/schemas/ActivityStatus"
          },
          "attemptCount": {
            "$ref": "#/components/schemas/AttemptCount"
          }
        }
      },
      "ActivityStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description​​​​​​​": {
            "type": "string"
          }
        }
      },
      "AttemptCount": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BillPayment": {
        "type": "object",
        "properties": {
          "payeeIdentifier": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "paymentDate": {
            "type": "string"
          },
          "paymentEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMemo": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "bankRoutingNumber": {
            "type": "string"
          },
          "bankAccountNumber": {
            "type": "string"
          },
          "bankAccountType": {
            "type": "string"
          },
          "frequencyType": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "paymentDelivery": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "activityStatus": {
            "$ref": "#/components/schemas/ActivityStatus"
          },
          "attemptCount": {
            "$ref": "#/components/schemas/AttemptCount"
          },
          "accountMigrationActivityKey": {
            "type": "integer",
            "format": "int64"
          },
          "index": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "GetODFeeEligibleTransactionsResponse": {
        "type": "object",
        "properties": {
          "odFeeEligibleTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ODFeeEligibleTransaction"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ODFeeEligibleTransaction": {
        "type": "object",
        "properties": {
          "transactionIdentifier": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "gracePeriodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "feeAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SccEligibilitiesResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CheckCreditLineIncreaseEligibilityResponse": {
        "type": "object",
        "properties": {
          "isEligible": {
            "type": "boolean"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CheckCreditLineDecreaseEligibilityResponse": {
        "type": "object",
        "properties": {
          "isEligible": {
            "type": "boolean"
          },
          "decreaseAmount": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetTransactionsResponse": {
        "type": "object",
        "properties": {
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTransactions"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetTransactions": {
        "type": "object",
        "properties": {
          "userIdentifier": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "transactionIdentifier": {
            "type": "string"
          },
          "parentTransactionIdentifier": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "transactionTypeDescription": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          },
          "purseIdentifier": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "last4Pan": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "postedDateTime": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "fee": {
            "$ref": "#/components/schemas/Fee"
          },
          "isCredit": {
            "type": "boolean"
          },
          "networkTransactionData": {
            "$ref": "#/components/schemas/NetworkTransactionData"
          },
          "postedInternalTransactionData": {
            "$ref": "#/components/schemas/PostedInternalTransactionData"
          }
        }
      },
      "GetInterestEarnedResponse": {
        "type": "object",
        "properties": {
          "interestEarned": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetDirectDepositsResponse": {
        "type": "object",
        "properties": {
          "directDeposits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectDeposit"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "DirectDeposit": {
        "type": "object",
        "properties": {
          "achCategory": {
            "type": "string"
          },
          "achTranCode": {
            "type": "string"
          },
          "isEarlyDirectDeposit": {
            "type": "boolean"
          },
          "achBatchEntryStatus": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string"
          },
          "fundEffectiveDate": {
            "type": "string"
          },
          "achValidationFailureCode": {
            "type": "string"
          },
          "coName": {
            "type": "string"
          },
          "coEntryDescription": {
            "type": "string"
          },
          "coID": {
            "type": "string"
          },
          "customerIdentifier": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "traceNumber": {
            "type": "string"
          },
          "originatingDFIID": {
            "type": "string"
          }
        }
      },
      "GetCashBackRewardTransactionsResponse": {
        "type": "object",
        "properties": {
          "totalCashBackRewardRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCashBackRewardTransactions"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCashBackRewardTransactions": {
        "type": "object",
        "properties": {
          "userIdentifier": {
            "type": "string"
          },
          "paymentIdentifier": {
            "type": "string"
          },
          "transactionIdentifier": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "transactionTypeDescription": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "accountIdentifier": {
            "type": "string"
          },
          "purseIdentifier": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "last4Pan": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "postedDateTime": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "fee": {
            "$ref": "#/components/schemas/Fee"
          },
          "isCredit": {
            "type": "boolean"
          },
          "networkTransactionData": {
            "$ref": "#/components/schemas/NetworkTransactionData"
          },
          "postedInternalTransactionData": {
            "$ref": "#/components/schemas/PostedInternalTransactionData"
          },
          "relatedTransactionIdentifier": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          }
        }
      },
      "GetRelatedTransactionsResponse": {
        "type": "object",
        "properties": {
          "relatedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTransactions"
            }
          },
          "transaction": {
            "$ref": "#/components/schemas/GetTransactions"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateACHRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Required: TransferIdentifier"
          },
          "transferType": {
            "type": "string",
            "description": "Required: TransferIdentifier"
          },
          "currency": {
            "type": "string",
            "description": "Required : Currency in string"
          },
          "verificationIdentifier": {
            "type": "string",
            "description": "Optional: VerificationIdentifier only for achPull"
          },
          "userIdentifier": {
            "type": "string",
            "description": "Optional: UserIdentifier only for achOut"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/TransferRoute"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Required : A container for the fraud data -\r\nkey/value pairs"
          },
          "transferDescription": {
            "type": "string"
          }
        },
        "description": "Create ACH transfer request"
      },
      "TransferRoute": {
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "description": "Required : Transaction amount.",
            "format": "double"
          },
          "deliveryType": {
            "type": "string",
            "description": "Optional : Delivery type."
          },
          "sourceTransferEndpoint": {
            "$ref": "#/components/schemas/EndPoint"
          },
          "targetTransferEndpoint": {
            "$ref": "#/components/schemas/ACHEndPoint"
          },
          "recurringType": {
            "type": "string"
          },
          "bankAccountVerificationMethod": {
            "type": "string"
          },
          "bankAccountVerificationDate": {
            "type": "string"
          },
          "bankAccountAuthorizationDate": {
            "type": "string"
          },
          "businessThirdPartyACH": {
            "type": "boolean"
          }
        },
        "description": "Container for data required to request Transfer\r\n- ACH\r\n- Purse to purse\r\n- Partner to account"
      },
      "EndPoint": {
        "type": "object",
        "properties": {
          "transferEndpointType": {
            "type": "string",
            "description": "Required : The type of transfer Endpoint - account, purse, programFundingSource\r\nExcept ACH transfer with bankAccount type"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "Conditional : Present if type is \"account\""
          }
        },
        "description": "Container for end point details"
      },
      "ACHEndPoint": {
        "type": "object",
        "properties": {
          "encryptedBankAccount": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "bankAccountReferenceId": {
            "type": "string",
            "description": "Conditional : Used if consumed by ACH transfer type"
          }
        },
        "description": "Container for ACH end point details"
      },
      "CreateACHResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/CreateTransfersAch"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Create ACH transfer response"
      },
      "CreateTransfersAch": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Required : TransferIdentifier"
          },
          "transferStatus": {
            "type": "string",
            "description": "Required : Transfer status"
          },
          "publicToken": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Conditional : Fraud data returned as associated with the transaction"
          }
        }
      },
      "GetAchDeliveryDateResponse": {
        "type": "object",
        "properties": {
          "achDeliveryDate": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateMrdcTransferRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/MrdcTransferRoute"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "description": "SubmitCheckRequest"
      },
      "MrdcTransferRoute": {
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "sourceTransferEndpoint": {
            "$ref": "#/components/schemas/MrdcSourceEndpoint"
          },
          "targetTransferEndpoint": {
            "$ref": "#/components/schemas/MrdcTargetEndpoint"
          }
        }
      },
      "MrdcSourceEndpoint": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "encryptedCheckImageData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "imageFormat": {
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          }
        }
      },
      "MrdcTargetEndpoint": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "CreateMrdcTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/MrdcTransfer"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AssessMrdcTransferRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/MrdcTransferRoute"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CreateMrdcAssessmentResponse": {
        "type": "object",
        "properties": {
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolderAssess"
            }
          },
          "prerequisites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AccountHolderAssess": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "userIdentifier": {
            "type": "string"
          },
          "pendingkycGate": {
            "type": "string"
          }
        }
      },
      "UpdateFundsAvailableDateRequest": {
        "required": [
          "fundingDate"
        ],
        "type": "object",
        "properties": {
          "fundingDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateFundsAvailableDateResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response object for UpdateFundsAvailableDate API"
      },
      "TransferRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Required: TransferIdentifier"
          },
          "transferType": {
            "type": "string",
            "description": "Required: TransferType"
          },
          "transferAuthorizationType": {
            "type": "string",
            "description": "Required : transfer authorization type"
          },
          "initiator": {
            "type": "string",
            "description": "Required : initiator"
          },
          "verificationIdentifier": {
            "type": "string",
            "description": "Optional : VerificationIdentifier only for achPull"
          },
          "userIdentifier": {
            "type": "string",
            "description": "Optional : userIdentifier only for achOut"
          },
          "memo": {
            "type": "string",
            "description": "Memo"
          },
          "transferDescription": {
            "type": "string"
          },
          "partnerReferenceData": {
            "type": "string",
            "description": "PartnerReferenceData"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/TransferRoute2"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional : Expected keys for transfer types IFTSend and ECashSend - (deviceId, customerIP)"
          }
        }
      },
      "TransferRoute2": {
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "description": "Transaction amount.",
            "format": "double"
          },
          "sourceTransferEndpoint": {
            "$ref": "#/components/schemas/TransferEndpoint"
          },
          "targetTransferEndpoint": {
            "$ref": "#/components/schemas/TransferEndpoint"
          }
        }
      },
      "TransferEndpoint": {
        "type": "object",
        "properties": {
          "transferEndPointType": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "encryptedCardData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "encryptedBankAccount": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "check": {
            "$ref": "#/components/schemas/Check"
          },
          "handleData": {
            "$ref": "#/components/schemas/HandleData"
          }
        }
      },
      "Check": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "frontImage": {
            "type": "string"
          },
          "backImage": {
            "type": "string"
          },
          "imageFormat": {
            "type": "integer",
            "format": "int32"
          },
          "deviceInfo": {
            "$ref": "#/components/schemas/DeviceInfo"
          }
        }
      },
      "HandleData": {
        "type": "object",
        "properties": {
          "handle": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "TransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/CreateTransfers"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreateTransfers": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Required : TransferIdentifier"
          },
          "transferStatus": {
            "type": "string",
            "description": "Required : Transfer status"
          }
        }
      },
      "AssessTransferRequest": {
        "type": "object",
        "properties": {
          "transferAuthorizationType": {
            "enum": [
              "hold",
              "execute",
              "accept",
              "cancel",
              "reject",
              "system",
              "reverse"
            ],
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "transferType": {
            "enum": [
              "disbursementIn",
              "disbursementOut",
              "achOut",
              "purse",
              "swipeReload",
              "adjustment",
              "achPull",
              "peerPayment",
              "mrdcTransfer",
              "eCashLoad",
              "billPay",
              "eCashSend",
              "eGiftPurchase",
              "iFTSend",
              "iFTLoad",
              "iFTOut",
              "sCCPayment",
              "sCCFunding",
              "creditLineIncrease",
              "creditLineDecrease",
              "sccOverCreditLimit",
              "sccWriteOffFullBalance",
              "sccWriteOffPartialBalance",
              "sccWriteOffNegativeBalance",
              "sccPaymentByAchPull",
              "cblPayment",
              "cblRefund",
              "sccWriteOffOverCreditLimit"
            ],
            "type": "string"
          },
          "initiator": {
            "type": "string"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/TransferRoute2"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AssessTransferResponse": {
        "type": "object",
        "properties": {
          "accountHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolderAssess"
            }
          },
          "availableBalance": {
            "type": "number",
            "format": "double"
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Limit"
            }
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessTransferFee"
            }
          },
          "prerequisites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "netAmount": {
            "type": "number",
            "format": "double"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "Limit": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "minimumAmount": {
            "type": "number",
            "format": "double"
          },
          "maximumAmount": {
            "type": "number",
            "format": "double"
          },
          "amountRemaining": {
            "type": "number",
            "format": "double"
          },
          "initialTransferDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "subsequentTransferAllowed": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AssessTransferFee": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AssessACHRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string",
            "description": "Required: TransferIdentifier"
          },
          "transferType": {
            "type": "string",
            "description": "Required: TransferIdentifier"
          },
          "currency": {
            "type": "string",
            "description": "Required : Currency in string"
          },
          "verificationIdentifier": {
            "type": "string",
            "description": "Optional: VerificationIdentifier only for achPull"
          },
          "userIdentifier": {
            "type": "string",
            "description": "Optional: UserIdentifier only for achOut"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/TransferRoute"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Required : A container for the fraud data -\r\nkey/value pairs"
          },
          "transferDescription": {
            "type": "string"
          }
        }
      },
      "AssessUpdateTransferRequest": {
        "type": "object",
        "properties": {
          "transferAuthorizationType": {
            "type": "string",
            "description": "TransferAuthorizationType"
          },
          "transferEndpoint": {
            "$ref": "#/components/schemas/UpdateTransferEndpoint"
          },
          "debitToNegative": {
            "type": "boolean",
            "description": "TransferEndPoint"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          }
        }
      },
      "UpdateTransferEndpoint": {
        "type": "object",
        "properties": {
          "isSource": {
            "type": "boolean",
            "description": "IsSource"
          },
          "transferEndPointType": {
            "type": "string",
            "description": "TransferEndPointType"
          },
          "identifier": {
            "type": "string",
            "description": "Identifier"
          },
          "encryptedCardData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        },
        "description": "UpdateTransferEndpoint"
      },
      "AssessUpdateTransferResponse": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Limit"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateTransferRequest": {
        "type": "object",
        "properties": {
          "transferAuthorizationType": {
            "type": "string",
            "description": "TransferAuthorizationType"
          },
          "transferEndpoint": {
            "$ref": "#/components/schemas/UpdateTransferEndpoint"
          },
          "debitToNegative": {
            "type": "boolean",
            "description": "TransferEndPoint"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          }
        },
        "description": "UpdateTransferRequest"
      },
      "UpdateTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/UpdatedTranfer"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "UpdateTransferResponse"
      },
      "UpdatedTranfer": {
        "type": "object",
        "properties": {
          "transferStatus": {
            "type": "string"
          }
        }
      },
      "WireOutRequest": {
        "type": "object",
        "properties": {
          "wireIdentifier": {
            "type": "string",
            "description": "Required: WireIdentifier"
          },
          "amount": {
            "type": "number",
            "description": "Required: Amount",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Required: Currency"
          },
          "obi": {
            "type": "string",
            "description": "obi"
          },
          "memo": {
            "type": "string",
            "description": "memo"
          },
          "encryptedBeneficiaryData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "IntermediaryBank": {
            "$ref": "#/components/schemas/BankData"
          }
        }
      },
      "BankData": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          }
        }
      },
      "WireOutResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "AchLinkExternalAccountRequest": {
        "type": "object",
        "properties": {
          "publicToken": {
            "type": "string"
          },
          "selectedBankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalBankAccountTokenExchange"
            }
          }
        }
      },
      "ExternalBankAccountTokenExchange": {
        "type": "object",
        "properties": {
          "institutionId": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "externalBankAccountId": {
            "type": "string"
          }
        }
      },
      "AchLinkExternalAccountResponse": {
        "type": "object",
        "properties": {
          "externalAccountProfileReferenceId": {
            "type": "string"
          },
          "externalBankAccountReferenceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetTransferByTokenRequest": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          }
        }
      },
      "GetTransferByTokenResponse": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "transferStatus": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          },
          "transferStatusReason": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "memo": {
            "type": "string"
          },
          "targetInformation": {
            "$ref": "#/components/schemas/Consumer"
          },
          "sourceInformation": {
            "$ref": "#/components/schemas/Consumer"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fee"
            }
          },
          "velocityLimitStatus": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetBankNameResponse": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "MrdcPartialTransferRequest": {
        "type": "object",
        "properties": {
          "transferIdentifier": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "transferRoute": {
            "$ref": "#/components/schemas/MrdcPartialTransferRoute"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MrdcPartialTransferRoute": {
        "required": [
          "transactionAmount"
        ],
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "sourceTransferEndpoint": {
            "$ref": "#/components/schemas/MrdcPartialSourceEndpoint"
          },
          "targetTransferEndpoint": {
            "$ref": "#/components/schemas/MrdcPartialTargetEndpoint"
          }
        }
      },
      "MrdcPartialSourceEndpoint": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "encryptedCheckImageData": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "encryptedCheckX9Data": {
            "$ref": "#/components/schemas/EncryptedData"
          },
          "imageFormat": {
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceInfo"
          },
          "postingInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostingInfo"
            }
          }
        }
      },
      "MrdcPartialTargetEndpoint": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          }
        }
      },
      "PostingInfo": {
        "type": "object",
        "properties": {
          "postingInfoToken": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "depositDate": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          }
        }
      },
      "MrdcPartialTransferResponse": {
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/MrdcPartialMainTransfer"
          },
          "fraudData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "MrdcPartialMainTransfer": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string"
          },
          "transferIdentifier": {
            "type": "string"
          },
          "checkAmount": {
            "type": "number",
            "format": "double"
          },
          "transferStatus": {
            "type": "string"
          },
          "checkReturnedDate": {
            "type": "string"
          },
          "checkCanceledDate": {
            "type": "string"
          },
          "checkDeclinedDate": {
            "type": "string"
          },
          "rejectReason": {
            "type": "string"
          },
          "checkSubmitDate": {
            "type": "string"
          },
          "postingInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostingFullInfo"
            }
          }
        }
      },
      "PostingFullInfo": {
        "type": "object",
        "properties": {
          "postingInfoStatus": {
            "type": "string"
          },
          "fundsAvailableDate": {
            "type": "string"
          },
          "lastChangedDateTime": {
            "type": "string"
          },
          "hasScheduleChanged": {
            "type": "string"
          },
          "postingInfoToken": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "depositDate": {
            "type": "string"
          },
          "transferType": {
            "type": "string"
          }
        }
      },
      "CreateTrialDepositRequest": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "description": "customer name"
          },
          "externalBankRoutingNumber": {
            "type": "string",
            "description": "external bank routing number"
          },
          "externalBankAccountNumber": {
            "type": "string",
            "description": "external bank account number"
          },
          "externalBankAccountType": {
            "enum": [
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "external bank account type",
            "format": "int32"
          },
          "bankName": {
            "type": "string",
            "description": "bank name"
          }
        },
        "description": "request for creating trial deposit"
      },
      "CreateTrialDepositResponse": {
        "type": "object",
        "properties": {
          "externalBankAccountRefId": {
            "type": "string",
            "description": "ExternalBankAccountId"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response for creating trial deposit"
      },
      "VerifyTrialDepositRequest": {
        "type": "object",
        "properties": {
          "externalBankAccountReferenceId": {
            "type": "string",
            "description": "ExternalBankAccountReferenceId"
          },
          "amount1": {
            "type": "number",
            "description": "Amount1",
            "format": "double"
          },
          "amount2": {
            "type": "number",
            "description": "Amount2",
            "format": "double"
          }
        },
        "description": "VerifyTrialDepositRequest"
      },
      "VerifyTrialDepositResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response message from gss"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "VerifyTrialDepositResponse"
      },
      "GetExternalBankAccountsResponse": {
        "type": "object",
        "properties": {
          "bankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalBankAccount"
            }
          },
          "maxExternalBankAccountsAllowed": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ExternalBankAccount": {
        "type": "object",
        "properties": {
          "institutionId": {
            "type": "string"
          },
          "institutionName": {
            "type": "string"
          },
          "bankAccountName": {
            "type": "string"
          },
          "bankAccountReferenceId": {
            "type": "string"
          },
          "externalBankAccountId": {
            "type": "string"
          },
          "last4BankAccountNumber": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          },
          "bankAccountNumber": {
            "type": "string"
          },
          "bankAccountType": {
            "type": "string"
          },
          "bankAccountSubType": {
            "type": "string"
          },
          "bankAccountCurrentBalance": {
            "type": "number",
            "format": "double"
          },
          "bankAccountAvailableBalance": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "bankAccountStatus": {
            "type": "string"
          },
          "isLastUsed": {
            "type": "boolean"
          }
        }
      },
      "UpdateExternalBankAccountStatusRequest": {
        "type": "object",
        "properties": {
          "externalBankAccountStatus": {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateExternalBankAccountStatusResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UpdateUserNameRequest": {
        "type": "object",
        "properties": {
          "encryptedUserData": {
            "$ref": "#/components/schemas/EncryptedData"
          }
        }
      },
      "UpdateUserNameResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ValidateSsnRequest": {
        "type": "object",
        "properties": {
          "ssnHashCode": {
            "type": "string"
          }
        }
      },
      "ValidateSsnResponse": {
        "type": "object",
        "properties": {
          "mismatchCount": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetValidateSsnResponse": {
        "type": "object",
        "properties": {
          "ssnIsMatched": {
            "type": "boolean"
          },
          "mismatchCount": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCreditLineRangeResponse": {
        "type": "object",
        "properties": {
          "minCreditLine": {
            "type": "integer",
            "format": "int32"
          },
          "maxCreditLine": {
            "type": "integer",
            "format": "int32"
          },
          "income": {
            "type": "number",
            "format": "double"
          },
          "incomeFrequency": {
            "type": "string"
          },
          "expense": {
            "type": "number",
            "format": "double"
          },
          "expenseFrequency": {
            "type": "string"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "UploadConsumerProfileAttachmentRequest": {
        "type": "object",
        "properties": {
          "attachmentType": {
            "enum": [
              "mLADocument",
              "sCRADocument"
            ],
            "type": "string"
          },
          "attachment": {
            "type": "string",
            "format": "byte"
          },
          "attachmentExtension": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UploadConsumerProfileAttachmentResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetConsumerProfileExtensionResponse": {
        "type": "object",
        "properties": {
          "consumerProfileExtension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumerProfileExtension"
            }
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ConsumerProfileExtension": {
        "type": "object",
        "properties": {
          "consumerProfileExtensionAttribute": {
            "enum": [
              "mLAStatus",
              "sCRAStatus",
              "prospectProfile",
              "sCRALastVerifiedDate",
              "prospectId",
              "ssnMismatchCount",
              "ssnIsMatched",
              "mLAVerifiedDate",
              "frozenDataOfCLI"
            ],
            "type": "string"
          },
          "consumerProfileExtensionAttributeValue": {
            "type": "string"
          }
        }
      },
      "UpdateCreditLineSourceRequest": {
        "type": "object",
        "properties": {
          "income": {
            "type": "number",
            "format": "double"
          },
          "incomeFrequency": {
            "type": "string"
          },
          "expense": {
            "type": "number",
            "format": "double"
          },
          "expenseFrequency": {
            "type": "string"
          }
        }
      },
      "UpdateCreditLineSourceResponse": {
        "type": "object",
        "properties": {
          "minCreditLine": {
            "type": "integer",
            "format": "int32"
          },
          "maxCreditLine": {
            "type": "integer",
            "format": "int32"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "GetCreditScoresRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "GetCreditScoresResponse": {
        "type": "object",
        "properties": {
          "creditScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditScore"
            }
          },
          "creditScoreDetail": {
            "$ref": "#/components/schemas/CreditScoreDetail"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "CreditScore": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "reasonCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreditScoreDetail": {
        "type": "object",
        "properties": {
          "minScore": {
            "type": "integer",
            "format": "int32"
          },
          "maxScore": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateFeatureRequest": {
        "type": "object",
        "properties": {
          "authorize": {
            "type": "boolean"
          }
        }
      },
      "UpdateFeatureResponse": {
        "type": "object",
        "properties": {
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        },
        "description": "Response after purse is updated"
      },
      "GetFeaturesResponse": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "odTier": {
            "$ref": "#/components/schemas/ODTier"
          },
          "responseDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDetail"
            },
            "description": "Required : Container for response details"
          }
        }
      },
      "ODTier": {
        "type": "object",
        "properties": {
          "odTier": {
            "type": "string"
          },
          "odTierDescription": {
            "type": "string"
          },
          "odCushionLimit": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "bearer token",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
